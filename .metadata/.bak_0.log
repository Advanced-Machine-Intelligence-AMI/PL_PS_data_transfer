!SESSION 2024-09-05 10:09:08.802 -----------------------------------------------
eclipse.buildId=2022.2
java.version=11.0.11
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Command-line arguments:  -os win32 -ws win32 -arch x86_64

!ENTRY org.eclipse.ui 4 4 2024-09-05 10:10:11.088
!MESSAGE Plug-in 'org.eclipse.ui.editors' contributed an invalid Menu Extension (Path: 'navigate' is invalid): org.eclipse.ui.edit.text.gotoLastEditPosition

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.647
!MESSAGE XSCT Command: [plnx-install-path  ; ::scw::scw_mode gui], Thread: Thread-9

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.652
!MESSAGE XSCT Command: [set sdk::sdk_chan tcfchan#0], Thread: Thread-19

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.657
!MESSAGE XSCT Command: [::hsi::utils::init_repo], Thread: Worker-3: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.665
!MESSAGE XSCT command with result: [plnx-install-path  ; ::scw::scw_mode gui], Result: [null, ]. Thread: Thread-9

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.665
!MESSAGE XSCT command with result: [set sdk::sdk_chan tcfchan#0], Result: [null, tcfchan#0]. Thread: Thread-19

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.672
!MESSAGE XSCT Command: [setws C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce], Thread: Thread-19

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.866
!MESSAGE XSCT command with result: [::hsi::utils::init_repo], Result: [null, ]. Thread: Worker-3: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.872
!MESSAGE XSCT command with result: [setws C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce], Result: [null, ]. Thread: Thread-19

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.877
!MESSAGE XSCT Command: [set query_var1 $::env(RDI_DATADIR)], Thread: Worker-3: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:32.886
!MESSAGE XSCT command with result: [set query_var1 $::env(RDI_DATADIR)], Result: [null, E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data]. Thread: Worker-3: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:10:44.462
!MESSAGE Opening file dialog using preferences. Current path: E:\Softwares\Xilinx_2022_2_sys_Files\Vitis\2022.2\data\embeddedsw\lib\fixed_hwplatforms, Local preference: scw_hwspec, Group preference: null

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:10:51.892
!MESSAGE XSCT Command: [::hsi::utils::openhw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:07.662
!MESSAGE XSCT command with result: [::hsi::utils::openhw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:07.711
!MESSAGE XSCT Command: [::hsi::utils::get_design_properties -json C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:07.721
!MESSAGE XSCT command with result: [::hsi::utils::get_design_properties -json C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Result: [null, {"device": "xczu5cg",
"family": "zynquplus",
"timestamp": "Wed Sep  4 16:59:23 2024",
"vivado_version": "2022.2_AR000034819",
"part": "xczu5cg-sfvc784-1-i",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:07.731
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:07.761
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Result: [null, {"ADC_Data_Input_util_ds_buf_0": {"hier_name": "ADC_Data_Input_util_ds_buf_0",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_1": {"hier_name": "ADC_Data_Input_util_ds_buf_1",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_10": {"hier_name": "ADC_Data_Input_util_ds_buf_10",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_11": {"hier_name": "ADC_Data_Input_util_ds_buf_11",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_12": {"hier_name": "ADC_Data_Input_util_ds_buf_12",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_13": {"hier_name": "ADC_Data_Input_util_ds_buf_13",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_2": {"hier_name": "ADC_Data_Input_util_ds_buf_2",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_3": {"hier_name": "ADC_Data_Input_util_ds_buf_3",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_4": {"hier_name": "ADC_Data_Input_util_ds_buf_4",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_5": {"hier_name": "ADC_Data_Input_util_ds_buf_5",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_6": {"hier_name": "ADC_Data_Input_util_ds_buf_6",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_7": {"hier_name": "ADC_Data_Input_util_ds_buf_7",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_8": {"hier_name": "ADC_Data_Input_util_ds_buf_8",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_9": {"hier_name": "ADC_Data_Input_util_ds_buf_9",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_xlconcat_1": {"hier_name": "ADC_Data_Input_xlconcat_1",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"AXI_Stream_Generator_0": {"hier_name": "AXI_Stream_Generator_0",
"type": "AXI_Stream_Generator",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"adc_timing_cntrl_0": {"hier_name": "adc_timing_cntrl_0",
"type": "adc_timing_cntrl",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"axi_dma_0": {"hier_name": "axi_dma_0",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_dma_1": {"hier_name": "axi_dma_1",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_interconnect_0": {"hier_name": "axi_interconnect_0",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"axi_interconnect_1": {"hier_name": "axi_interconnect_1",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"axi_quad_spi_ADC": {"hier_name": "axi_quad_spi_ADC",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axi_quad_spi_DVGA": {"hier_name": "axi_quad_spi_DVGA",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axis_data_fifo_0": {"hier_name": "axis_data_fifo_0",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"axis_data_fifo_1": {"hier_name": "axis_data_fifo_1",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"clk_wiz_0": {"hier_name": "clk_wiz_0",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"clk_wiz_1": {"hier_name": "clk_wiz_1",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_0": {"hier_name": "proc_sys_reset_0",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_1": {"hier_name": "proc_sys_reset_1",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"system_ila_0": {"hier_name": "system_ila_0",
"type": "system_ila",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"util_ds_buf_clk": {"hier_name": "util_ds_buf_clk",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"xlconcat_0": {"hier_name": "xlconcat_0",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"zynq_ultra_ps_e_0": {"hier_name": "zynq_ultra_ps_e_0",
"type": "zynq_ultra_ps_e",
"version": "3.4",
"ip_type": "",
},
"psu_axi_interconnect_0": {"hier_name": "psu_axi_interconnect_0",
"type": "psu_axi_interconnect",
"version": "1.0",
"ip_type": "BUS",
},
"psu_coresight_0": {"hier_name": "psu_coresight_0",
"type": "psu_coresight_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_acpu_gic": {"hier_name": "psu_acpu_gic",
"type": "psu_acpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_rcpu_gic": {"hier_name": "psu_rcpu_gic",
"type": "psu_rcpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_r5_tcm_ram_global": {"hier_name": "psu_r5_tcm_ram_global",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_tcm_ram_0": {"hier_name": "psu_r5_tcm_ram_0",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_ram_0": {"hier_name": "psu_ocm_ram_0",
"type": "psu_ocm_ram_0",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ocm": {"hier_name": "psu_ocm",
"type": "psu_ocm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm": {"hier_name": "psu_r5_1_btcm",
"type": "psu_r5_1_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm_global": {"hier_name": "psu_r5_1_btcm_global",
"type": "psu_r5_1_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm": {"hier_name": "psu_r5_1_atcm",
"type": "psu_r5_1_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm_global": {"hier_name": "psu_r5_1_atcm_global",
"type": "psu_r5_1_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_lockstep": {"hier_name": "psu_r5_0_btcm_lockstep",
"type": "psu_r5_0_btcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm": {"hier_name": "psu_r5_0_btcm",
"type": "psu_r5_0_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_global": {"hier_name": "psu_r5_0_btcm_global",
"type": "psu_r5_0_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_lockstep": {"hier_name": "psu_r5_0_atcm_lockstep",
"type": "psu_r5_0_atcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm": {"hier_name": "psu_r5_0_atcm",
"type": "psu_r5_0_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_global": {"hier_name": "psu_r5_0_atcm_global",
"type": "psu_r5_0_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_bbram_0": {"hier_name": "psu_bbram_0",
"type": "psu_bbram_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_ram": {"hier_name": "psu_pmu_ram",
"type": "psu_pmu_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_iomodule": {"hier_name": "psu_pmu_iomodule",
"type": "psu_pmu_iomodule",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_global_0": {"hier_name": "psu_pmu_global_0",
"type": "psu_pmu_global_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_mbistjtag": {"hier_name": "psu_mbistjtag",
"type": "psu_mbistjtag",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rsa": {"hier_name": "psu_rsa",
"type": "psu_rsa",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_efuse": {"hier_name": "psu_efuse",
"type": "psu_efuse",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csu_0": {"hier_name": "psu_csu_0",
"type": "psu_csu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csudma": {"hier_name": "psu_csudma",
"type": "psu_csudma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_gpv": {"hier_name": "psu_smmu_gpv",
"type": "psu_smmu_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_gpv": {"hier_name": "psu_fpd_gpv",
"type": "psu_fpd_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_gpv": {"hier_name": "psu_cci_gpv",
"type": "psu_cci_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr_secure": {"hier_name": "psu_fpd_slcr_secure",
"type": "psu_fpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr": {"hier_name": "psu_fpd_slcr",
"type": "psu_fpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_reg": {"hier_name": "psu_smmu_reg",
"type": "psu_smmu_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_reg": {"hier_name": "psu_cci_reg",
"type": "psu_cci_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_cfg": {"hier_name": "psu_fpd_xmpu_cfg",
"type": "psu_fpd_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apu": {"hier_name": "psu_apu",
"type": "psu_apu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_7": {"hier_name": "psu_gdma_7",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_6": {"hier_name": "psu_gdma_6",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_5": {"hier_name": "psu_gdma_5",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_4": {"hier_name": "psu_gdma_4",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_3": {"hier_name": "psu_gdma_3",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_2": {"hier_name": "psu_gdma_2",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_1": {"hier_name": "psu_gdma_1",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_0": {"hier_name": "psu_gdma_0",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_sink": {"hier_name": "psu_fpd_xmpu_sink",
"type": "psu_fpd_xmpu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_5": {"hier_name": "psu_apm_5",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_serdes": {"hier_name": "psu_serdes",
"type": "psu_serdes",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_siou": {"hier_name": "psu_siou",
"type": "psu_siou",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_5": {"hier_name": "psu_afi_5",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_4": {"hier_name": "psu_afi_4",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_3": {"hier_name": "psu_afi_3",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_2": {"hier_name": "psu_afi_2",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_1": {"hier_name": "psu_afi_1",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_0": {"hier_name": "psu_afi_0",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crf_apb": {"hier_name": "psu_crf_apb",
"type": "psu_crf_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sata": {"hier_name": "psu_sata",
"type": "psu_sata",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_0": {"hier_name": "psu_apm_0",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_qos_ctrl": {"hier_name": "psu_ddr_qos_ctrl",
"type": "psu_ddr_qos_ctrl",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_phy": {"hier_name": "psu_ddr_phy",
"type": "psu_ddr_phy",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu5_cfg": {"hier_name": "psu_ddr_xmpu5_cfg",
"type": "psu_ddr_xmpu5_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu4_cfg": {"hier_name": "psu_ddr_xmpu4_cfg",
"type": "psu_ddr_xmpu4_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu3_cfg": {"hier_name": "psu_ddr_xmpu3_cfg",
"type": "psu_ddr_xmpu3_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu2_cfg": {"hier_name": "psu_ddr_xmpu2_cfg",
"type": "psu_ddr_xmpu2_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu1_cfg": {"hier_name": "psu_ddr_xmpu1_cfg",
"type": "psu_ddr_xmpu1_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu0_cfg": {"hier_name": "psu_ddr_xmpu0_cfg",
"type": "psu_ddr_xmpu0_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_7": {"hier_name": "psu_adma_7",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_6": {"hier_name": "psu_adma_6",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_5": {"hier_name": "psu_adma_5",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_4": {"hier_name": "psu_adma_4",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_3": {"hier_name": "psu_adma_3",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_2": {"hier_name": "psu_adma_2",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_1": {"hier_name": "psu_adma_1",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_0": {"hier_name": "psu_adma_0",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_xmpu_cfg": {"hier_name": "psu_ocm_xmpu_cfg",
"type": "psu_ocm_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rtc": {"hier_name": "psu_rtc",
"type": "psu_rtc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ams": {"hier_name": "psu_ams",
"type": "psu_ams",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_2": {"hier_name": "psu_apm_2",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_1": {"hier_name": "psu_apm_1",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu_sink": {"hier_name": "psu_lpd_xppu_sink",
"type": "psu_lpd_xppu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_6": {"hier_name": "psu_afi_6",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rpu": {"hier_name": "psu_rpu",
"type": "psu_rpu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu": {"hier_name": "psu_lpd_xppu",
"type": "psu_lpd_xppu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crl_apb": {"hier_name": "psu_crl_apb",
"type": "psu_crl_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr_secure": {"hier_name": "psu_lpd_slcr_secure",
"type": "psu_lpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr": {"hier_name": "psu_lpd_slcr",
"type": "psu_lpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_0": {"hier_name": "psu_ipi_0",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_1": {"hier_name": "psu_ipi_1",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_2": {"hier_name": "psu_ipi_2",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_3": {"hier_name": "psu_ipi_3",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_4": {"hier_name": "psu_ipi_4",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_5": {"hier_name": "psu_ipi_5",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_6": {"hier_name": "psu_ipi_6",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ctrl_ipi": {"hier_name": "psu_ctrl_ipi",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_message_buffers": {"hier_name": "psu_message_buffers",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_s": {"hier_name": "psu_iou_s",
"type": "psu_iou_s",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntrs": {"hier_name": "psu_iou_scntrs",
"type": "psu_iou_scntrs",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntr": {"hier_name": "psu_iou_scntr",
"type": "psu_iou_scntr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iousecure_slcr": {"hier_name": "psu_iousecure_slcr",
"type": "psu_iousecure_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iouslcr_0": {"hier_name": "psu_iouslcr_0",
"type": "psu_iouslcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_ddr_0": {"hier_name": "psu_r5_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddr_0": {"hier_name": "psu_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddrc_0": {"hier_name": "psu_ddrc_0",
"type": "psu_ddrc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sd_0": {"hier_name": "psu_sd_0",
"type": "psu_sd",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gpio_0": {"hier_name": "psu_gpio_0",
"type": "psu_gpio",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_uart_0": {"hier_name": "psu_uart_0",
"type": "psu_uart",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cortexa53_0": {"hier_name": "psu_cortexa53_0",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_1": {"hier_name": "psu_cortexa53_1",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_0": {"hier_name": "psu_cortexr5_0",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_1": {"hier_name": "psu_cortexr5_1",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_pmu_0": {"hier_name": "psu_pmu_0",
"type": "psu_pmu",
"version": "9.2",
"ip_type": "PROCESSOR",
},
"system_ila_0_ila_lib": {"hier_name": "system_ila_0/system_ila_0_ila_lib",
"type": "ila",
"version": "6.2",
"ip_type": "PERIPHERAL",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:56.739
!MESSAGE XSCT Command: [hsi::utils::get_supported_os -json C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:11:56.776
!MESSAGE XSCT command with result: [hsi::utils::get_supported_os -json C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Result: [null, {"psu_cortexa53_0": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_cortexa53_1": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_cortexr5_0": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_cortexr5_1": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_pmu_0": {"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:00.846
!MESSAGE XSCT Command: [::hsi::utils::get_all_app_details -json], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:00.916
!MESSAGE XSCT command with result: [::hsi::utils::get_all_app_details -json], Result: [null, {"ddr_self_refresh": {"userdefname": "DDR self refresh",
"description": "This DDR self refresh application provides a simple demonstration of how to enter to/exit from DDR self refresh mode. This application runs on R5 out of TCM.",
"supp_proc": "psu_cortexr5",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/ddr_self_refresh",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"dhrystone": {"userdefname": "Dhrystone",
"description": "Dhrystone synthetic benchmark program for baremetal environment.",
"supp_proc": "microblaze psu_cortexa53 ps7_cortexa9 psv_cortexa72 psu_cortexr5 psv_cortexr5",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/dhrystone",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"empty_application": {"userdefname": "Empty Application(C)",
"description": "A blank C project.",
"supp_proc": "microblaze ps7_cortexa9 psu_cortexa53 psu_cortexr5 psu_cortexa72 psv_cortexr5 psv_cortexa72 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52",
"supp_os": "standalone xilkernel freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/empty_application",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"freertos_hello_world": {"userdefname": "FreeRTOS Hello World",
"description": " FreeRTOS Hello World application",
"supp_proc": "psu_cortexr5 psv_cortexr5 ps7_cortexa9 psu_cortexa53 microblaze psv_cortexa72 psxl_cortexr52 psx_cortexr52 psx_cortexa78 psxl_cortexa78",
"supp_os": "freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/freertos_hello_world",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_echo_server": {"userdefname": "FreeRTOS lwIP Echo Server",
"description": "The FreeRTOS lwIP Echo Server application provides a simple demonstration of how to use the light-weight IP stack (lwIP) with FreeRTOS. This application sets up the board to use IP address 192.168.1.10 or IPv6 address FE80:0:0:0:20A:35FF:FE00:102, with MAC address 00:0a:35:00:01:02. The server listens for input at port 7 and simply echoes back whatever data is sent to that port.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/freertos_lwip_echo_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_tcp_perf_client": {"userdefname": "FreeRTOS lwIP TCP Perf Client",
"description": "The FreeRTOS LwIP TCP Perf Client application is used for creating TCP client and measure TCP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10 and IPv6 link local address whenipv6_enable is true, with MAC address 00:0a:35:00:01:02. This application creates TCP client on board and make connection with TCP server running on host machine. It will display connection information along with interim and average TCP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/freertos_lwip_tcp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_tcp_perf_server": {"userdefname": "FreeRTOS lwIP TCP Perf Server",
"description": "The FreeRTOS LwIP TCP Server application is used for creating TCP server using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10 and IPv6 link local address when ipv6_enable is true, with MAC address 00:0a:35:00:01:02. The application creates TCP server on board and starts listening for TCP client connections. It will display client connection info and also display interim and average TCP statistics for data transfer. This application handles only 1 client connection at a time.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/freertos_lwip_tcp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_udp_perf_client": {"userdefname": "FreeRTOS lwIP UDP Perf Client",
"description": "The FreeRTOS LwIP UDP Perf Client application is used for creating UDP client and measure UDP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. This application creates UDP client on board and make connection with UDP server running on host machine. It will display connection information along with interim and average UDP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/freertos_lwip_udp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_udp_perf_server": {"userdefname": "FreeRTOS lwIP UDP Perf Server",
"description": "The FreeRTOS LwIP UDP Perf Server application is used for creating UDP server and measure downlink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. The application creates UDP server on board and starts listening for UDP client connections. It will display client connection information with interim and average UDP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/freertos_lwip_udp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"hello_world": {"userdefname": "Hello World",
"description": "Let's say 'Hello World' in C.",
"supp_proc": "microblaze ps7_cortexa9 psu_cortexa53 psu_cortexr5 psu_cortexa72 psv_cortexr5 psv_cortexa72 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52",
"supp_os": "standalone xilkernel",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/hello_world",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"imgsel": {"userdefname": "Image Selector",
"description": "ImgSel for Zynq Ultrascale+ MPSoC. The Image Selector  selects the image based on configuration parameters",
"supp_proc": "psu_cortexa53",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/imgsel",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"img_rcvry": {"userdefname": "Image Recovery",
"description": "Image Recovery tool which writes  user selected images on the board.",
"supp_proc": "psu_cortexa53",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/img_rcvry",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"libmetal_echo_demo": {"userdefname": "Libmetal AMP Demo",
"description": "Libmetal AMP Application",
"supp_proc": "psu_cortexr5 psv_cortexr5",
"supp_os": "freertos10_xilinx standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/libmetal_echo_demo",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_echo_server": {"userdefname": "lwIP Echo Server",
"description": "The lwIP Echo Server application provides a simple demonstration of how to use the light-weight IP stack (lwIP). This application sets up the board to use IP address 192.168.1.10 or IPv6 FE80:0:0:0:20A:35FF:FE00:102, with MAC address 00:0a:35:00:01:02. The server listens for input at port 7 and simply echoes back whatever data is sent to that port.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/lwip_echo_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_tcp_perf_client": {"userdefname": "lwIP TCP Perf Client",
"description": "The LwIP TCP Perf Client application is used for creating TCP client and measure TCP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10 and IPv6 link local address when ipv6_enable is true, with MAC address 00:0a:35:00:01:02. This application creates TCP client on board and make connection with TCP server running on host machine. It will display connection information along with interim and average TCP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/lwip_tcp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_tcp_perf_server": {"userdefname": "lwIP TCP Perf Server",
"description": "The LwIP TCP Perf Server application is used for creating TCP server and measure downlink performance using light-weight IP stack (lwIP). This application sets up the board to use default IPv4 address 192.168.1.10 and IPv6 link local address when ipv6_enable is true, with MAC address 00:0a:35:00:01:02. The application creates TCP server on board and starts listening for TCP client connections. It will display client connection information with interim and average TCP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/lwip_tcp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_udp_perf_client": {"userdefname": "lwIP UDP Perf Client",
"description": "The LwIP UDP Perf Client application is used for creating UDP client and measure UDP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. This application creates UDP client on board and make connection with UDP server running on host machine. It will display connection information along with interim and average UDP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/lwip_udp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_udp_perf_server": {"userdefname": "lwIP UDP Perf Server",
"description": "The LwIP UDP Perf Server application is used for creating UDP server and measure downlink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. The application creates UDP server on board and starts listening for UDP client connections. It will display client connection information with interim and average UDP statistics for data transfer.",
"supp_proc": "psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/lwip_udp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"mba_fs_boot": {"userdefname": "mba_fs_boot",
"description": "fs-boot for microblaze by Xilinx Inc..",
"supp_proc": "microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/mba_fs_boot",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"memory_tests": {"userdefname": "Memory Tests",
"description": "This application tests Memory Regions present in the hardware.",
"supp_proc": "microblaze ps7_cortexa9 psu_cortexa53 psu_cortexr5 psv_cortexa72 psv_cortexr5 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/memory_tests",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"openamp_echo_test": {"userdefname": "OpenAMP echo-test",
"description": " OpenAMP echo-test application ",
"supp_proc": "psu_cortexr5 psv_cortexr5 ps7_cortexa9",
"supp_os": "freertos10_xilinx standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/openamp_echo_test",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"openamp_matrix_multiply": {"userdefname": "OpenAMP matrix multiplication Demo",
"description": " OpenAMP matrix multiplication application ",
"supp_proc": "psu_cortexr5 psv_cortexr5 ps7_cortexa9",
"supp_os": "freertos10_xilinx standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/openamp_matrix_multiply",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"openamp_rpc_demo": {"userdefname": "OpenAMP RPC Demo",
"description": " OpenAMP rpc-demo application ",
"supp_proc": "psu_cortexr5 psv_cortexr5 ps7_cortexa9",
"supp_os": "freertos10_xilinx standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/openamp_rpc_demo",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"peripheral_tests": {"userdefname": "Peripheral Tests",
"description": "Simple test routines for all peripherals in the hardware.",
"supp_proc": "ps7_cortexa9 psu_cortexa53 psu_cortexr5 microblaze psv_cortexa72 psv_cortexr5 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52",
"supp_os": "standalone xilkernel",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/peripheral_tests",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"rsa_auth_app": {"userdefname": "RSA Authentication App",
"description": "Used to RSA authenticate a user application",
"supp_proc": "ps7_cortexa9",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/rsa_auth_app",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"srec_bootloader": {"userdefname": "SREC Bootloader",
"description": "Simple bootloader for loading SREC images from non volatile memory. This program assumes that you have an SREC image programmed into BPI flash. The program also assumes that the target SREC image is an application for this processor that does not overlap the bootloader and resides in separate physical memory in the hardware. Typically this application is initialized into BRAM so that it bootloads the SREC image when the FPGA is powered up.

Don't forget to modify blconfig.h to reflect the physical address where your SREC image resides in non-volatile memory!",
"supp_proc": "microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/srec_bootloader",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"srec_spi_bootloader": {"userdefname": "SREC SPI Bootloader",
"description": "Simple bootloader for loading SREC images from non volatile memory (SPI). This program assumes that you have an SREC image programmed into SPI flash already. The program also assumes that the target SREC image is an application for this processor that does not overlap the bootloader and resides in separate physical memory in the hardware. Typically this application is initialized into BRAM so that it bootloads the SREC image when the FPGA is powered up.

Don't forget to modify blconfig.h to reflect the offset where your SREC image resides in non-volatile memory!",
"supp_proc": "microblaze",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/srec_spi_bootloader",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"versal_plm": {"userdefname": "versal PLM",
"description": "Platform Loader and Manager for versal.",
"supp_proc": "psu_pmc psv_pmc psxl_pmc psx_pmc",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/versal_plm",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"versal_psmfw": {"userdefname": "versal PSM Firmware",
"description": "Processing System Management Unit Firmware for versal.",
"supp_proc": "psu_psm psv_psm psxl_psm psx_psm",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/versal_psmfw",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"zynqmp_dram_test": {"userdefname": "Zynq MP DRAM tests",
"description": "This application runs out of OCM and performs memory tests on Zynq MP DRAM.  For more information about the test, refer to ZYNQMP_DRAM_DIAGNOSTICS_TEST.docx, in the src directory of the application",
"supp_proc": "psu_cortexa53",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/zynqmp_dram_test",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"zynqmp_fsbl": {"userdefname": "Zynq MP FSBL",
"description": "First Stage Bootloader (FSBL) for Zynq Ultrascale+ MPSoC. The FSBL configures the FPGA with HW bit stream (if it exists)  and loads the Operating System (OS) Image or Standalone (SA) Image or 2nd Stage Boot Loader image from the  non-volatile memory (NAND/SD/QSPI) to RAM (DDR) and takes A53/R5 out of reset.  It supports multiple partitions,  and each partition can be a code image or a bit stream.",
"supp_proc": "psu_cortexa53 psu_cortexr5",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/zynqmp_fsbl",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"zynqmp_pmufw": {"userdefname": "ZynqMP PMU Firmware",
"description": "Platform Management Unit Firmware for ZynqMP.",
"supp_proc": "psu_pmu",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/zynqmp_pmufw",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"zynq_dram_test": {"userdefname": "Zynq DRAM tests",
"description": "This application runs out of OCM and performs memory tests and read/write eye measurements on Zynq DRAM.  For more information about the test, refer to ZYNQ_DRAM_DIAGNOSTICS_TEST.docx, in the src directory of the application",
"supp_proc": "ps7_cortexa9",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/zynq_dram_test",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"zynq_fsbl": {"userdefname": "Zynq FSBL",
"description": "First Stage Bootloader (FSBL) for Zynq. The FSBL configures the FPGA with HW bit stream (if it exists)  and loads the Operating System (OS) Image or Standalone (SA) Image or 2nd Stage Boot Loader image from the  non-volatile memory (NAND/NOR/QSPI) to RAM (DDR) and starts executing it.  It supports multiple partitions,  and each partition can be a code image or a bit stream.",
"supp_proc": "ps7_cortexa9",
"supp_os": "standalone",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps/zynq_fsbl",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"linux_empty_app": {"userdefname": "Linux Empty Application",
"description": "A blank Linux C project.",
"supp_proc": "ps7_cortexa9 psu_cortexa53 microblaze psv_cortexa72",
"supp_os": "linux",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps_linux/linux_empty_app",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"linux_hello_world": {"userdefname": "Linux Hello World",
"description": "Let's say 'Hello World' in C.",
"supp_proc": "ps7_cortexa9 psu_cortexa53 microblaze psv_cortexa72",
"supp_os": "linux",
"path": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/sw_apps_linux/linux_hello_world",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:01.036
!MESSAGE XSCT Command: [::hsi::utils::is_app_supported_on_hw_sw  -hw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa -os standalone -processor psu_cortexa53_0 -app hello_world -sw {} -arch {}], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:01.156
!MESSAGE XSCT command with result: [::hsi::utils::is_app_supported_on_hw_sw  -hw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa -os standalone -processor psu_cortexa53_0 -app hello_world -sw {} -arch {}], Result: [null, 1]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:01.166
!MESSAGE XSCT Command: [::hsi::utils::is_app_supported_on_hw_sw  -hw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa -os standalone -processor psu_cortexa53_0 -app hello_world -sw {} -arch {}], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:01.329
!MESSAGE XSCT command with result: [::hsi::utils::is_app_supported_on_hw_sw  -hw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa -os standalone -processor psu_cortexa53_0 -app hello_world -sw {} -arch {}], Result: [null, 1]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:03.156
!MESSAGE XSCT Command: [platform create -name {DMA_testing} -hw {C:\Users\KrishnaVamshi(ELD-IN\Downloads\DMA_testing.xsa} -arch {64-bit} -fsbl-target {psu_cortexa53_0} -out {C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce};platform write], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:38.405
!MESSAGE XSCT command with result: [platform create -name {DMA_testing} -hw {C:\Users\KrishnaVamshi(ELD-IN\Downloads\DMA_testing.xsa} -arch {64-bit} -fsbl-target {psu_cortexa53_0} -out {C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce};platform write], Result: [null, Successfully saved  the platform at "C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/platform.spr"]. Thread: ModalContext

!ENTRY org.eclipse.e4.ui.workbench 4 0 2024-09-05 10:12:38.485
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.part.IntroPart.dispose(IntroPart.java:99)
	at org.eclipse.ui.internal.ViewIntroAdapterPart.dispose(ViewIntroAdapterPart.java:153)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.invalidate(CompatibilityPart.java:260)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.destroy(CompatibilityPart.java:417)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:1002)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:967)
	at org.eclipse.e4.core.internal.di.InjectorImpl.uninject(InjectorImpl.java:200)
	at org.eclipse.e4.core.internal.di.Requestor.uninject(Requestor.java:176)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.update(ContextObjectSupplier.java:89)
	at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:105)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.removeListenersTo(EclipseContext.java:491)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.uninject(ContextInjectionFactory.java:184)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:954)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.disposeWidget(ElementReferenceRenderer.java:115)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:945)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1406)
	at org.eclipse.ui.internal.WorkbenchPage.hidePart(WorkbenchPage.java:1537)
	at org.eclipse.ui.internal.WorkbenchPage.hidePart(WorkbenchPage.java:1496)
	at org.eclipse.ui.internal.WorkbenchPage.hideView(WorkbenchPage.java:2609)
	at org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(WorkbenchIntroManager.java:98)
	at com.xilinx.sdx.ui.utils.SWTUtils.closeWelcomeView(SWTUtils.java:529)
	at com.xilinx.sdx.scw.project.ScwProjectCreationHandler$1.run(ScwProjectCreationHandler.java:71)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3897)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3527)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:166)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:368)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1033)
	at com.xilinx.sdx.npw.NewProjectCreationHandler.execute(NewProjectCreationHandler.java:105)
	at com.xilinx.sdx.npw.NewProjectWizard._createApplicationProject(NewProjectWizard.java:214)
	at com.xilinx.sdx.npw.NewProjectWizard.performFinish(NewProjectWizard.java:161)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:832)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:472)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4105)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3922)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3524)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.actions.NewWizardShortcutAction.run(NewWizardShortcutAction.java:130)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:579)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:413)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4105)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3922)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3524)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at com.xilinx.ide.application.ui.Application.start(Application.java:80)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:38.675
!MESSAGE XSCT Command: [domain create -name {standalone_psu_cortexa53_0} -display-name {standalone_psu_cortexa53_0} -os {standalone} -proc {psu_cortexa53_0} -runtime {cpp} -arch {64-bit} -support-app {hello_world}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:47.454
!MESSAGE XSCT command with result: [domain create -name {standalone_psu_cortexa53_0} -display-name {standalone_psu_cortexa53_0} -os {standalone} -proc {psu_cortexa53_0} -runtime {cpp} -arch {64-bit} -support-app {hello_world}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:47.505
!MESSAGE XSCT Command: [platform write], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.349
!MESSAGE XSCT command with result: [platform write], Result: [null, Successfully saved  the platform at "C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/platform.spr"]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.419
!MESSAGE XSCT Command: [platform active {DMA_testing}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.425
!MESSAGE XSCT command with result: [platform active {DMA_testing}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.435
!MESSAGE XSCT Command: [domain active {zynqmp_fsbl}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.445
!MESSAGE XSCT command with result: [domain active {zynqmp_fsbl}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.458
!MESSAGE XSCT Command: [domain active {zynqmp_pmufw}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.464
!MESSAGE XSCT command with result: [domain active {zynqmp_pmufw}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.474
!MESSAGE XSCT Command: [domain active {standalone_psu_cortexa53_0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.479
!MESSAGE XSCT command with result: [domain active {standalone_psu_cortexa53_0}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:48.488
!MESSAGE XSCT Command: [platform generate -quick], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:49.855
!MESSAGE XSCT command with result: [platform generate -quick], Result: [null, Successfully generated platform at "C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce"]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:12:51.605
!MESSAGE XSCT Command: [::hsi::utils::openhw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.312
!MESSAGE XSCT command with result: [::hsi::utils::openhw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.312
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.359
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"ADC_Data_Input_util_ds_buf_0": {"hier_name": "ADC_Data_Input_util_ds_buf_0",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_1": {"hier_name": "ADC_Data_Input_util_ds_buf_1",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_10": {"hier_name": "ADC_Data_Input_util_ds_buf_10",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_11": {"hier_name": "ADC_Data_Input_util_ds_buf_11",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_12": {"hier_name": "ADC_Data_Input_util_ds_buf_12",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_13": {"hier_name": "ADC_Data_Input_util_ds_buf_13",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_2": {"hier_name": "ADC_Data_Input_util_ds_buf_2",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_3": {"hier_name": "ADC_Data_Input_util_ds_buf_3",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_4": {"hier_name": "ADC_Data_Input_util_ds_buf_4",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_5": {"hier_name": "ADC_Data_Input_util_ds_buf_5",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_6": {"hier_name": "ADC_Data_Input_util_ds_buf_6",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_7": {"hier_name": "ADC_Data_Input_util_ds_buf_7",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_8": {"hier_name": "ADC_Data_Input_util_ds_buf_8",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_util_ds_buf_9": {"hier_name": "ADC_Data_Input_util_ds_buf_9",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"ADC_Data_Input_xlconcat_1": {"hier_name": "ADC_Data_Input_xlconcat_1",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"AXI_Stream_Generator_0": {"hier_name": "AXI_Stream_Generator_0",
"type": "AXI_Stream_Generator",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"adc_timing_cntrl_0": {"hier_name": "adc_timing_cntrl_0",
"type": "adc_timing_cntrl",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"axi_dma_0": {"hier_name": "axi_dma_0",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_dma_1": {"hier_name": "axi_dma_1",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_interconnect_0": {"hier_name": "axi_interconnect_0",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"axi_interconnect_1": {"hier_name": "axi_interconnect_1",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"axi_quad_spi_ADC": {"hier_name": "axi_quad_spi_ADC",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axi_quad_spi_DVGA": {"hier_name": "axi_quad_spi_DVGA",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axis_data_fifo_0": {"hier_name": "axis_data_fifo_0",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"axis_data_fifo_1": {"hier_name": "axis_data_fifo_1",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"clk_wiz_0": {"hier_name": "clk_wiz_0",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"clk_wiz_1": {"hier_name": "clk_wiz_1",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_0": {"hier_name": "proc_sys_reset_0",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_1": {"hier_name": "proc_sys_reset_1",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"system_ila_0": {"hier_name": "system_ila_0",
"type": "system_ila",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"util_ds_buf_clk": {"hier_name": "util_ds_buf_clk",
"type": "util_ds_buf",
"version": "2.2",
"ip_type": "PERIPHERAL",
},
"xlconcat_0": {"hier_name": "xlconcat_0",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"zynq_ultra_ps_e_0": {"hier_name": "zynq_ultra_ps_e_0",
"type": "zynq_ultra_ps_e",
"version": "3.4",
"ip_type": "",
},
"psu_axi_interconnect_0": {"hier_name": "psu_axi_interconnect_0",
"type": "psu_axi_interconnect",
"version": "1.0",
"ip_type": "BUS",
},
"psu_coresight_0": {"hier_name": "psu_coresight_0",
"type": "psu_coresight_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_acpu_gic": {"hier_name": "psu_acpu_gic",
"type": "psu_acpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_rcpu_gic": {"hier_name": "psu_rcpu_gic",
"type": "psu_rcpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_r5_tcm_ram_global": {"hier_name": "psu_r5_tcm_ram_global",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_tcm_ram_0": {"hier_name": "psu_r5_tcm_ram_0",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_ram_0": {"hier_name": "psu_ocm_ram_0",
"type": "psu_ocm_ram_0",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ocm": {"hier_name": "psu_ocm",
"type": "psu_ocm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm": {"hier_name": "psu_r5_1_btcm",
"type": "psu_r5_1_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm_global": {"hier_name": "psu_r5_1_btcm_global",
"type": "psu_r5_1_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm": {"hier_name": "psu_r5_1_atcm",
"type": "psu_r5_1_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm_global": {"hier_name": "psu_r5_1_atcm_global",
"type": "psu_r5_1_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_lockstep": {"hier_name": "psu_r5_0_btcm_lockstep",
"type": "psu_r5_0_btcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm": {"hier_name": "psu_r5_0_btcm",
"type": "psu_r5_0_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_global": {"hier_name": "psu_r5_0_btcm_global",
"type": "psu_r5_0_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_lockstep": {"hier_name": "psu_r5_0_atcm_lockstep",
"type": "psu_r5_0_atcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm": {"hier_name": "psu_r5_0_atcm",
"type": "psu_r5_0_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_global": {"hier_name": "psu_r5_0_atcm_global",
"type": "psu_r5_0_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_bbram_0": {"hier_name": "psu_bbram_0",
"type": "psu_bbram_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_ram": {"hier_name": "psu_pmu_ram",
"type": "psu_pmu_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_iomodule": {"hier_name": "psu_pmu_iomodule",
"type": "psu_pmu_iomodule",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_global_0": {"hier_name": "psu_pmu_global_0",
"type": "psu_pmu_global_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_mbistjtag": {"hier_name": "psu_mbistjtag",
"type": "psu_mbistjtag",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rsa": {"hier_name": "psu_rsa",
"type": "psu_rsa",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_efuse": {"hier_name": "psu_efuse",
"type": "psu_efuse",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csu_0": {"hier_name": "psu_csu_0",
"type": "psu_csu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csudma": {"hier_name": "psu_csudma",
"type": "psu_csudma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_gpv": {"hier_name": "psu_smmu_gpv",
"type": "psu_smmu_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_gpv": {"hier_name": "psu_fpd_gpv",
"type": "psu_fpd_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_gpv": {"hier_name": "psu_cci_gpv",
"type": "psu_cci_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr_secure": {"hier_name": "psu_fpd_slcr_secure",
"type": "psu_fpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr": {"hier_name": "psu_fpd_slcr",
"type": "psu_fpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_reg": {"hier_name": "psu_smmu_reg",
"type": "psu_smmu_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_reg": {"hier_name": "psu_cci_reg",
"type": "psu_cci_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_cfg": {"hier_name": "psu_fpd_xmpu_cfg",
"type": "psu_fpd_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apu": {"hier_name": "psu_apu",
"type": "psu_apu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_7": {"hier_name": "psu_gdma_7",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_6": {"hier_name": "psu_gdma_6",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_5": {"hier_name": "psu_gdma_5",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_4": {"hier_name": "psu_gdma_4",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_3": {"hier_name": "psu_gdma_3",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_2": {"hier_name": "psu_gdma_2",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_1": {"hier_name": "psu_gdma_1",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_0": {"hier_name": "psu_gdma_0",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_sink": {"hier_name": "psu_fpd_xmpu_sink",
"type": "psu_fpd_xmpu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_5": {"hier_name": "psu_apm_5",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_serdes": {"hier_name": "psu_serdes",
"type": "psu_serdes",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_siou": {"hier_name": "psu_siou",
"type": "psu_siou",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_5": {"hier_name": "psu_afi_5",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_4": {"hier_name": "psu_afi_4",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_3": {"hier_name": "psu_afi_3",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_2": {"hier_name": "psu_afi_2",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_1": {"hier_name": "psu_afi_1",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_0": {"hier_name": "psu_afi_0",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crf_apb": {"hier_name": "psu_crf_apb",
"type": "psu_crf_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sata": {"hier_name": "psu_sata",
"type": "psu_sata",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_0": {"hier_name": "psu_apm_0",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_qos_ctrl": {"hier_name": "psu_ddr_qos_ctrl",
"type": "psu_ddr_qos_ctrl",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_phy": {"hier_name": "psu_ddr_phy",
"type": "psu_ddr_phy",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu5_cfg": {"hier_name": "psu_ddr_xmpu5_cfg",
"type": "psu_ddr_xmpu5_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu4_cfg": {"hier_name": "psu_ddr_xmpu4_cfg",
"type": "psu_ddr_xmpu4_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu3_cfg": {"hier_name": "psu_ddr_xmpu3_cfg",
"type": "psu_ddr_xmpu3_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu2_cfg": {"hier_name": "psu_ddr_xmpu2_cfg",
"type": "psu_ddr_xmpu2_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu1_cfg": {"hier_name": "psu_ddr_xmpu1_cfg",
"type": "psu_ddr_xmpu1_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu0_cfg": {"hier_name": "psu_ddr_xmpu0_cfg",
"type": "psu_ddr_xmpu0_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_7": {"hier_name": "psu_adma_7",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_6": {"hier_name": "psu_adma_6",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_5": {"hier_name": "psu_adma_5",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_4": {"hier_name": "psu_adma_4",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_3": {"hier_name": "psu_adma_3",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_2": {"hier_name": "psu_adma_2",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_1": {"hier_name": "psu_adma_1",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_0": {"hier_name": "psu_adma_0",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_xmpu_cfg": {"hier_name": "psu_ocm_xmpu_cfg",
"type": "psu_ocm_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rtc": {"hier_name": "psu_rtc",
"type": "psu_rtc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ams": {"hier_name": "psu_ams",
"type": "psu_ams",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_2": {"hier_name": "psu_apm_2",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_1": {"hier_name": "psu_apm_1",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu_sink": {"hier_name": "psu_lpd_xppu_sink",
"type": "psu_lpd_xppu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_6": {"hier_name": "psu_afi_6",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rpu": {"hier_name": "psu_rpu",
"type": "psu_rpu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu": {"hier_name": "psu_lpd_xppu",
"type": "psu_lpd_xppu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crl_apb": {"hier_name": "psu_crl_apb",
"type": "psu_crl_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr_secure": {"hier_name": "psu_lpd_slcr_secure",
"type": "psu_lpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr": {"hier_name": "psu_lpd_slcr",
"type": "psu_lpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_0": {"hier_name": "psu_ipi_0",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_1": {"hier_name": "psu_ipi_1",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_2": {"hier_name": "psu_ipi_2",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_3": {"hier_name": "psu_ipi_3",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_4": {"hier_name": "psu_ipi_4",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_5": {"hier_name": "psu_ipi_5",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_6": {"hier_name": "psu_ipi_6",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ctrl_ipi": {"hier_name": "psu_ctrl_ipi",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_message_buffers": {"hier_name": "psu_message_buffers",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_s": {"hier_name": "psu_iou_s",
"type": "psu_iou_s",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntrs": {"hier_name": "psu_iou_scntrs",
"type": "psu_iou_scntrs",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntr": {"hier_name": "psu_iou_scntr",
"type": "psu_iou_scntr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iousecure_slcr": {"hier_name": "psu_iousecure_slcr",
"type": "psu_iousecure_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iouslcr_0": {"hier_name": "psu_iouslcr_0",
"type": "psu_iouslcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_ddr_0": {"hier_name": "psu_r5_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddr_0": {"hier_name": "psu_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddrc_0": {"hier_name": "psu_ddrc_0",
"type": "psu_ddrc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sd_0": {"hier_name": "psu_sd_0",
"type": "psu_sd",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gpio_0": {"hier_name": "psu_gpio_0",
"type": "psu_gpio",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_uart_0": {"hier_name": "psu_uart_0",
"type": "psu_uart",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cortexa53_0": {"hier_name": "psu_cortexa53_0",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_1": {"hier_name": "psu_cortexa53_1",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_0": {"hier_name": "psu_cortexr5_0",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_1": {"hier_name": "psu_cortexr5_1",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_pmu_0": {"hier_name": "psu_pmu_0",
"type": "psu_pmu",
"version": "9.2",
"ip_type": "PROCESSOR",
},
"system_ila_0_ila_lib": {"hier_name": "system_ila_0/system_ila_0_ila_lib",
"type": "ila",
"version": "6.2",
"ip_type": "PERIPHERAL",
},
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.439
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss ], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.453
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss ], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.471
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:08.471
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.890
!MESSAGE XSCT Command: [hsi::utils::get_supported_os -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.940
!MESSAGE XSCT command with result: [hsi::utils::get_supported_os -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"psu_cortexa53_0": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_cortexa53_1": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_cortexr5_0": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_cortexr5_1": {"freertos10_xilinx_v1_12": {"name": "freertos10_xilinx",
"version": "1.12",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.4.6",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_12",
},
"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
"psu_pmu_0": {"standalone_v8_0": {"name": "standalone",
"version": "8.0",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/lib/bsp/standalone_v8_0",
},
},
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.953
!MESSAGE XSCT Command: [::hsi::utils::get_libs_from_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.953
!MESSAGE XSCT command with result: [::hsi::utils::get_libs_from_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.970
!MESSAGE XSCT Command: [::hsi::utils::get_sw_libs -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.970
!MESSAGE XSCT command with result: [::hsi::utils::get_sw_libs -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, {}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.985
!MESSAGE XSCT Command: [::hsi::utils::get_connected_periphs C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:10.985
!MESSAGE XSCT command with result: [::hsi::utils::get_connected_periphs C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0], Result: [null, axi_dma_0 axi_dma_1 axi_quad_spi_ADC axi_quad_spi_DVGA psu_acpu_gic psu_adma_0 psu_adma_1 psu_adma_2 psu_adma_3 psu_adma_4 psu_adma_5 psu_adma_6 psu_adma_7 psu_afi_0 psu_afi_1 psu_afi_2 psu_afi_3 psu_afi_4 psu_afi_5 psu_afi_6 psu_ams psu_apm_0 psu_apm_1 psu_apm_2 psu_apm_5 psu_apu psu_cci_gpv psu_cci_reg psu_coresight_0 psu_crf_apb psu_crl_apb psu_csu_0 psu_csudma psu_ctrl_ipi psu_ddr_0 psu_ddr_phy psu_ddr_qos_ctrl psu_ddr_xmpu0_cfg psu_ddr_xmpu1_cfg psu_ddr_xmpu2_cfg psu_ddr_xmpu3_cfg psu_ddr_xmpu4_cfg psu_ddr_xmpu5_cfg psu_ddrc_0 psu_efuse psu_fpd_gpv psu_fpd_slcr psu_fpd_slcr_secure psu_fpd_xmpu_cfg psu_fpd_xmpu_sink psu_gdma_0 psu_gdma_1 psu_gdma_2 psu_gdma_3 psu_gdma_4 psu_gdma_5 psu_gdma_6 psu_gdma_7 psu_gpio_0 psu_iou_scntr psu_iou_scntrs psu_iousecure_slcr psu_iouslcr_0 psu_ipi_0 psu_lpd_slcr psu_lpd_slcr_secure psu_lpd_xppu psu_lpd_xppu_sink psu_mbistjtag psu_message_buffers psu_ocm psu_ocm_ram_0 psu_ocm_xmpu_cfg psu_pmu_global_0 psu_r5_0_atcm_global psu_r5_0_btcm_global psu_r5_1_atcm_global psu_r5_1_btcm_global psu_r5_tcm_ram_global psu_rcpu_gic psu_rpu psu_rsa psu_rtc psu_sd_0 psu_serdes psu_siou psu_smmu_gpv psu_smmu_reg psu_uart_0]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.004
!MESSAGE XSCT Command: [::hsi::utils::get_drivers_for_sw -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.016
!MESSAGE XSCT command with result: [::hsi::utils::get_drivers_for_sw -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, {"axi_dma_0": {"name": "axidma",
"ver": "9.15",
},
"axi_dma_1": {"name": "axidma",
"ver": "9.15",
},
"axi_quad_spi_ADC": {"name": "spi",
"ver": "4.9",
},
"axi_quad_spi_DVGA": {"name": "spi",
"ver": "4.9",
},
"psu_acpu_gic": {"name": "scugic",
"ver": "5.0",
},
"psu_adma_0": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_1": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_2": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_3": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_4": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_5": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_6": {"name": "zdma",
"ver": "1.15",
},
"psu_adma_7": {"name": "zdma",
"ver": "1.15",
},
"psu_afi_0": {"name": "generic",
"ver": "3.1",
},
"psu_afi_1": {"name": "generic",
"ver": "3.1",
},
"psu_afi_2": {"name": "generic",
"ver": "3.1",
},
"psu_afi_3": {"name": "generic",
"ver": "3.1",
},
"psu_afi_4": {"name": "generic",
"ver": "3.1",
},
"psu_afi_5": {"name": "generic",
"ver": "3.1",
},
"psu_afi_6": {"name": "generic",
"ver": "3.1",
},
"psu_ams": {"name": "sysmonpsu",
"ver": "2.8",
},
"psu_apm_0": {"name": "axipmon",
"ver": "6.9",
},
"psu_apm_1": {"name": "axipmon",
"ver": "6.9",
},
"psu_apm_2": {"name": "axipmon",
"ver": "6.9",
},
"psu_apm_5": {"name": "axipmon",
"ver": "6.9",
},
"psu_apu": {"name": "generic",
"ver": "3.1",
},
"psu_cci_gpv": {"name": "generic",
"ver": "3.1",
},
"psu_cci_reg": {"name": "generic",
"ver": "3.1",
},
"psu_coresight_0": {"name": "coresightps_dcc",
"ver": "1.8",
},
"psu_crf_apb": {"name": "resetps",
"ver": "1.5",
},
"psu_crl_apb": {"name": "generic",
"ver": "3.1",
},
"psu_csu_0": {"name": "generic",
"ver": "3.1",
},
"psu_csudma": {"name": "csudma",
"ver": "1.12",
},
"psu_ctrl_ipi": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_0": {"name": "ddrcpsu",
"ver": "1.4",
},
"psu_ddr_phy": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_qos_ctrl": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_xmpu0_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_xmpu1_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_xmpu2_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_xmpu3_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_xmpu4_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_ddr_xmpu5_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_ddrc_0": {"name": "ddrcpsu",
"ver": "1.4",
},
"psu_efuse": {"name": "generic",
"ver": "3.1",
},
"psu_fpd_gpv": {"name": "generic",
"ver": "3.1",
},
"psu_fpd_slcr": {"name": "generic",
"ver": "3.1",
},
"psu_fpd_slcr_secure": {"name": "generic",
"ver": "3.1",
},
"psu_fpd_xmpu_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_fpd_xmpu_sink": {"name": "generic",
"ver": "3.1",
},
"psu_gdma_0": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_1": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_2": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_3": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_4": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_5": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_6": {"name": "zdma",
"ver": "1.15",
},
"psu_gdma_7": {"name": "zdma",
"ver": "1.15",
},
"psu_gpio_0": {"name": "gpiops",
"ver": "3.10",
},
"psu_iou_scntr": {"name": "generic",
"ver": "3.1",
},
"psu_iou_scntrs": {"name": "generic",
"ver": "3.1",
},
"psu_iousecure_slcr": {"name": "generic",
"ver": "3.1",
},
"psu_iouslcr_0": {"name": "generic",
"ver": "3.1",
},
"psu_ipi_0": {"name": "ipipsu",
"ver": "2.12",
},
"psu_lpd_slcr": {"name": "generic",
"ver": "3.1",
},
"psu_lpd_slcr_secure": {"name": "generic",
"ver": "3.1",
},
"psu_lpd_xppu": {"name": "generic",
"ver": "3.1",
},
"psu_lpd_xppu_sink": {"name": "generic",
"ver": "3.1",
},
"psu_mbistjtag": {"name": "generic",
"ver": "3.1",
},
"psu_message_buffers": {"name": "generic",
"ver": "3.1",
},
"psu_ocm": {"name": "generic",
"ver": "3.1",
},
"psu_ocm_ram_0": {"name": "generic",
"ver": "3.1",
},
"psu_ocm_xmpu_cfg": {"name": "generic",
"ver": "3.1",
},
"psu_pmu_global_0": {"name": "generic",
"ver": "3.1",
},
"psu_r5_0_atcm_global": {"name": "generic",
"ver": "3.1",
},
"psu_r5_0_btcm_global": {"name": "generic",
"ver": "3.1",
},
"psu_r5_1_atcm_global": {"name": "generic",
"ver": "3.1",
},
"psu_r5_1_btcm_global": {"name": "generic",
"ver": "3.1",
},
"psu_r5_tcm_ram_global": {"name": "generic",
"ver": "3.1",
},
"psu_rcpu_gic": {"name": "scugic",
"ver": "5.0",
},
"psu_rpu": {"name": "generic",
"ver": "3.1",
},
"psu_rsa": {"name": "generic",
"ver": "3.1",
},
"psu_rtc": {"name": "rtcpsu",
"ver": "1.12",
},
"psu_sd_0": {"name": "sdps",
"ver": "4.0",
},
"psu_serdes": {"name": "generic",
"ver": "3.1",
},
"psu_siou": {"name": "generic",
"ver": "3.1",
},
"psu_smmu_gpv": {"name": "generic",
"ver": "3.1",
},
"psu_smmu_reg": {"name": "generic",
"ver": "3.1",
},
"psu_uart_0": {"name": "uartps",
"ver": "3.11",
},
"psu_cortexa53_0": {"name": "cpu_cortexa53",
"ver": "2.0",
},
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.033
!MESSAGE XSCT Command: [hsi::utils::get_drivers_for_hw -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.759
!MESSAGE XSCT command with result: [hsi::utils::get_drivers_for_hw -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"ADC_Data_Input_util_ds_buf_0": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_1": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_10": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_11": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_12": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_13": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_2": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_3": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_4": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_5": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_6": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_7": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_8": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_util_ds_buf_9": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"ADC_Data_Input_xlconcat_1": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"AXI_Stream_Generator_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"adc_timing_cntrl_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"axi_dma_0": {"version": "7.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"axidma_v9_15": {"name": "axidma",
"version": "9.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axidma_v9_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_dma_1": {"version": "7.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"axidma_v9_15": {"name": "axidma",
"version": "9.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axidma_v9_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_interconnect_0": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"axi_interconnect_1": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"axi_quad_spi_ADC": {"version": "3.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"spi_v4_9": {"name": "spi",
"version": "4.9",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/spi_v4_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_quad_spi_DVGA": {"version": "3.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"spi_v4_9": {"name": "spi",
"version": "4.9",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/spi_v4_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axis_data_fifo_0": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"axis_data_fifo_1": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"clk_wiz_0": {"version": "6.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"clk_wiz_v1_5": {"name": "clk_wiz",
"version": "1.5",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/clk_wiz_v1_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"clk_wiz_1": {"version": "6.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"clk_wiz_v1_5": {"name": "clk_wiz",
"version": "1.5",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/clk_wiz_v1_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"proc_sys_reset_0": {"version": "5.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"proc_sys_reset_1": {"version": "5.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"system_ila_0": {"version": "1.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"util_ds_buf_clk": {"version": "2.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"xlconcat_0": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"zynq_ultra_ps_e_0": {"version": "3.4",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_axi_interconnect_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_coresight_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"coresightps_dcc_v1_8": {"name": "coresightps_dcc",
"version": "1.8",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/coresightps_dcc_v1_8",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_acpu_gic": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"scugic_v5_0": {"name": "scugic",
"version": "5.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/scugic_v5_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_rcpu_gic": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"scugic_v5_0": {"name": "scugic",
"version": "5.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/scugic_v5_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_r5_tcm_ram_global": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_tcm_ram_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ocm_ram_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ocm": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_1_btcm": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_1_btcm_global": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_1_atcm": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_1_atcm_global": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_0_btcm_lockstep": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_0_btcm": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_0_btcm_global": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_0_atcm_lockstep": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_0_atcm": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_0_atcm_global": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_bbram_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_pmu_ram": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_pmu_iomodule": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_pmu_global_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_mbistjtag": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_rsa": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_efuse": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_csu_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_csudma": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"csudma_v1_12": {"name": "csudma",
"version": "1.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/csudma_v1_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_smmu_gpv": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_fpd_gpv": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_cci_gpv": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_fpd_slcr_secure": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_fpd_slcr": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_smmu_reg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_cci_reg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_fpd_xmpu_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_apu": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_gdma_7": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_6": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_5": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_4": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_3": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_2": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gdma_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_fpd_xmpu_sink": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_apm_5": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"axipmon_v6_9": {"name": "axipmon",
"version": "6.9",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axipmon_v6_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_serdes": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_siou": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_5": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_4": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_3": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_2": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_crf_apb": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"resetps_v1_5": {"name": "resetps",
"version": "1.5",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/resetps_v1_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_sata": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_apm_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"axipmon_v6_9": {"name": "axipmon",
"version": "6.9",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axipmon_v6_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ddr_qos_ctrl": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_phy": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_xmpu5_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_xmpu4_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_xmpu3_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_xmpu2_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_xmpu1_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ddr_xmpu0_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_adma_7": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_6": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_5": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_4": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_3": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_2": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_adma_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"zdma_v1_15": {"name": "zdma",
"version": "1.15",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/zdma_v1_15",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ocm_xmpu_cfg": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_rtc": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"rtcpsu_v1_12": {"name": "rtcpsu",
"version": "1.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/rtcpsu_v1_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ams": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"sysmonpsu_v2_8": {"name": "sysmonpsu",
"version": "2.8",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/sysmonpsu_v2_8",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_apm_2": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"axipmon_v6_9": {"name": "axipmon",
"version": "6.9",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axipmon_v6_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_apm_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"axipmon_v6_9": {"name": "axipmon",
"version": "6.9",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axipmon_v6_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_lpd_xppu_sink": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_afi_6": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_rpu": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_lpd_xppu": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_crl_apb": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_lpd_slcr_secure": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_lpd_slcr": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_ipi_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ipi_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ipi_2": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ipi_3": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ipi_4": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ipi_5": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ipi_6": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ipipsu_v2_12": {"name": "ipipsu",
"version": "2.12",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ipipsu_v2_12",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ctrl_ipi": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_message_buffers": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_iou_s": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_iou_scntrs": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_iou_scntr": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_iousecure_slcr": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_iouslcr_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
"psu_r5_ddr_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ddrcpsu_v1_4": {"name": "ddrcpsu",
"version": "1.4",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ddrcpsu_v1_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ddr_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ddrcpsu_v1_4": {"name": "ddrcpsu",
"version": "1.4",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ddrcpsu_v1_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_ddrc_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"ddrcpsu_v1_4": {"name": "ddrcpsu",
"version": "1.4",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ddrcpsu_v1_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_sd_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"sdps_v4_0": {"name": "sdps",
"version": "4.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/sdps_v4_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_gpio_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"gpiops_v3_10": {"name": "gpiops",
"version": "3.10",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/gpiops_v3_10",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_uart_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"uartps_v3_11": {"name": "uartps",
"version": "3.11",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartps_v3_11",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_cortexa53_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"cpu_cortexa53_v2_0": {"name": "cpu_cortexa53",
"version": "2.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_cortexa53_v2_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_cortexa53_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"cpu_cortexa53_v2_0": {"name": "cpu_cortexa53",
"version": "2.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_cortexa53_v2_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_cortexr5_0": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"cpu_cortexr5_v2_0": {"name": "cpu_cortexr5",
"version": "2.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_cortexr5_v2_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_cortexr5_1": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"cpu_cortexr5_v2_0": {"name": "cpu_cortexr5",
"version": "2.0",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_cortexr5_v2_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"psu_pmu_0": {"version": "9.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
"cpu_v2_16": {"name": "cpu",
"version": "2.16",
"repo": "E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_v2_16",
"compilerflags": "",
"linkerflags": "",
},
},
},
"system_ila_0_ila_lib": {"version": "6.2",
"driver_info": {"generic": {"name": "generic",
"version": "3.0 3.1",
"repo": "{E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_0} {E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v3_1}",
},
},
},
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.774
!MESSAGE XSCT Command: [::hsi::utils::get_libs_from_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.774
!MESSAGE XSCT command with result: [::hsi::utils::get_libs_from_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.792
!MESSAGE XSCT Command: [::hsi::utils::get_sw_libs -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.805
!MESSAGE XSCT command with result: [::hsi::utils::get_sw_libs -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, {}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.838
!MESSAGE XSCT Command: [::hsi::utils::openhw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.853
!MESSAGE XSCT command with result: [::hsi::utils::openhw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.853
!MESSAGE XSCT Command: [::hsi::utils::opensw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.884
!MESSAGE XSCT command with result: [::hsi::utils::opensw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:11.884
!MESSAGE XSCT Command: [::hsi::utils::generate_app_template -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss -app hello_world -processor psu_cortexa53_0 -os standalone -dir C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/src], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:12.045
!MESSAGE XSCT command with result: [::hsi::utils::generate_app_template -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss -app hello_world -processor psu_cortexa53_0 -os standalone -dir C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/src], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:12.110
!MESSAGE XSCT Command: [hsi::internal::extract_hw_files -quiet bit mmi bmm -dir {C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\Interrupt_DMA_PSPL\_ide\bitstream}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:12.216
!MESSAGE XSCT command with result: [hsi::internal::extract_hw_files -quiet bit mmi bmm -dir {C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\Interrupt_DMA_PSPL\_ide\bitstream}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:12.232
!MESSAGE XSCT Command: [::hsi::utils::get_design_properties -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:12.232
!MESSAGE XSCT command with result: [::hsi::utils::get_design_properties -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"device": "xczu5cg",
"family": "zynquplus",
"timestamp": "Wed Sep  4 16:59:23 2024",
"vivado_version": "2022.2_AR000034819",
"part": "xczu5cg-sfvc784-1-i",
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:12.247
!MESSAGE XSCT Command: [::hsi::generate_target {psinit} [ ::hsi::get_cells -filter { CONFIGURABLE == true } -hierarchical] -dir {C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/psinit} -quiet], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:13.192
!MESSAGE XSCT command with result: [::hsi::generate_target {psinit} [ ::hsi::get_cells -filter { CONFIGURABLE == true } -hierarchical] -dir {C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/psinit} -quiet], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:13.273
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:13.273
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/system.mss], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:13:13.320
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:14.645
!MESSAGE XSCT Command: [::hsi::utils::closehw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:13:14.818
!MESSAGE XSCT command with result: [::hsi::utils::closehw C:/Users/KRISHN~1/AppData/Local/Temp/hwspec_DMA_testing17424811438600572345/DMA_testing.xsa], Result: [null, ]. Thread: main

!ENTRY org.eclipse.cdt.core 1 0 2024-09-05 10:13:16.381
!MESSAGE Indexed 'Interrupt_DMA_PSPL' (2 sources, 53 headers) in 1.01 sec: 1,523 declarations; 2,165 references; 0 unresolved inclusions; 0 syntax errors; 0 unresolved names (0%)

!ENTRY org.eclipse.cdt.core 1 0 2024-09-05 10:13:16.397
!MESSAGE Indexed 'Interrupt_DMA_PSPL_system' (0 sources, 0 headers) in 0 sec: 0 declarations; 0 references; 0 unresolved inclusions; 0 syntax errors; 0 unresolved names (0%)

!ENTRY org.eclipse.cdt.core 1 0 2024-09-05 10:13:37.062
!MESSAGE Indexed 'DMA_testing' (967 sources, 1,116 headers) in 20.6 sec: 1,35,416 declarations; 3,37,026 references; 480 unresolved inclusions; 147 syntax errors; 4,614 unresolved names (0.97%)

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:19:34.067
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:19:34.091
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:19:34.097
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:19:34.112
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:19:34.123
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:19:34.147
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:19:34.157
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:20:12.737
!MESSAGE Tool usage for 'SDX_BUILD' updated to '1'

!ENTRY org.eclipse.launchbar.core 2 0 2024-09-05 10:22:27.356
!MESSAGE Enablement expression is missing for descriptor type org.eclipse.cdt.debug.core.coreBuildDescriptorType

!ENTRY org.eclipse.launchbar.core 2 0 2024-09-05 10:22:27.362
!MESSAGE Enablement expression is missing for config provider for org.eclipse.cdt.debug.core.coreBuildDescriptorType

!ENTRY org.eclipse.launchbar.core 2 0 2024-09-05 10:22:27.371
!MESSAGE Enablement expression is missing for config provider for org.eclipse.cdt.debug.core.coreBuildDescriptorType

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.065
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0 C_DEBUG_ENABLED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.068
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0 C_DEBUG_ENABLED], Result: [null, 1]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.068
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0 C_DEBUG_PROFILE_SIZE], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.081
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0 C_DEBUG_PROFILE_SIZE], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.081
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0 C_FREQ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.097
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0 C_FREQ], Result: [null, 180000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.223
!MESSAGE XSCT Command: [::hsi::utils::get_configurable_ip C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.223
!MESSAGE XSCT command with result: [::hsi::utils::get_configurable_ip C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, zynq_ultra_ps_e_0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.239
!MESSAGE XSCT Command: [::hsi::utils::get_ps_config_params -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.259
!MESSAGE XSCT command with result: [::hsi::utils::get_ps_config_params -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.271
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.365
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354584,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354588,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354600,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354632,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354636,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354648,
},
},
"axi_dma_1": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485632,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485636,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485656,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485660,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485672,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485680,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485684,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485704,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485708,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485720,
},
},
"axi_quad_spi_ADC": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420160,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420192,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420196,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420208,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420212,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420216,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420124,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420200,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420204,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420128,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420136,
},
},
"axi_quad_spi_DVGA": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551232,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551264,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551268,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551280,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551284,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551288,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551196,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551272,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551276,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551200,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551208,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_efuse": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_0": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pmu_global_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sd_0": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_uart_0": {},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.390
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.413
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0], Result: [null, {"axi_dma_0_S_AXI_LITE": {"name": "axi_dma_0",
"base": "0xA0000000",
"high": "0xA000FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_ADC_AXI_LITE": {"name": "axi_quad_spi_ADC",
"base": "0xA0010000",
"high": "0xA001FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_1_S_AXI_LITE": {"name": "axi_dma_1",
"base": "0xA0020000",
"high": "0xA002FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_DVGA_AXI_LITE": {"name": "axi_quad_spi_DVGA",
"base": "0xA0030000",
"high": "0xA003FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"psu_acpu_gic": {"name": "psu_acpu_gic",
"base": "0xF9010000",
"high": "0xF907FFFF",
"size": "458752",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_0": {"name": "psu_adma_0",
"base": "0xFFA80000",
"high": "0xFFA8FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_1": {"name": "psu_adma_1",
"base": "0xFFA90000",
"high": "0xFFA9FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_2": {"name": "psu_adma_2",
"base": "0xFFAA0000",
"high": "0xFFAAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_3": {"name": "psu_adma_3",
"base": "0xFFAB0000",
"high": "0xFFABFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_4": {"name": "psu_adma_4",
"base": "0xFFAC0000",
"high": "0xFFACFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_5": {"name": "psu_adma_5",
"base": "0xFFAD0000",
"high": "0xFFADFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_6": {"name": "psu_adma_6",
"base": "0xFFAE0000",
"high": "0xFFAEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_7": {"name": "psu_adma_7",
"base": "0xFFAF0000",
"high": "0xFFAFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_0": {"name": "psu_afi_0",
"base": "0xFD360000",
"high": "0xFD36FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_1": {"name": "psu_afi_1",
"base": "0xFD370000",
"high": "0xFD37FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_2": {"name": "psu_afi_2",
"base": "0xFD380000",
"high": "0xFD38FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_3": {"name": "psu_afi_3",
"base": "0xFD390000",
"high": "0xFD39FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_4": {"name": "psu_afi_4",
"base": "0xFD3A0000",
"high": "0xFD3AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_5": {"name": "psu_afi_5",
"base": "0xFD3B0000",
"high": "0xFD3BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_6": {"name": "psu_afi_6",
"base": "0xFF9B0000",
"high": "0xFF9BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ams": {"name": "psu_ams",
"base": "0xFFA50000",
"high": "0xFFA5FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_0": {"name": "psu_apm_0",
"base": "0xFD0B0000",
"high": "0xFD0BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_1": {"name": "psu_apm_1",
"base": "0xFFA00000",
"high": "0xFFA0FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_2": {"name": "psu_apm_2",
"base": "0xFFA10000",
"high": "0xFFA1FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_5": {"name": "psu_apm_5",
"base": "0xFD490000",
"high": "0xFD49FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apu": {"name": "psu_apu",
"base": "0xFD5C0000",
"high": "0xFD5CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_gpv": {"name": "psu_cci_gpv",
"base": "0xFD6E0000",
"high": "0xFD6EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_reg": {"name": "psu_cci_reg",
"base": "0xFD5E0000",
"high": "0xFD5EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_coresight_0": {"name": "psu_coresight_0",
"base": "0xFE800000",
"high": "0xFEFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crf_apb": {"name": "psu_crf_apb",
"base": "0xFD1A0000",
"high": "0xFD2DFFFF",
"size": "1310720",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crl_apb": {"name": "psu_crl_apb",
"base": "0xFF5E0000",
"high": "0xFF85FFFF",
"size": "2621440",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csu_0": {"name": "psu_csu_0",
"base": "0xFFCA0000",
"high": "0xFFCAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csudma": {"name": "psu_csudma",
"base": "0xFFC80000",
"high": "0xFFC9FFFF",
"size": "131072",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ctrl_ipi": {"name": "psu_ctrl_ipi",
"base": "0xFF380000",
"high": "0xFF3FFFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_phy": {"name": "psu_ddr_phy",
"base": "0xFD080000",
"high": "0xFD08FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_qos_ctrl": {"name": "psu_ddr_qos_ctrl",
"base": "0xFD090000",
"high": "0xFD09FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu0_cfg": {"name": "psu_ddr_xmpu0_cfg",
"base": "0xFD000000",
"high": "0xFD00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu1_cfg": {"name": "psu_ddr_xmpu1_cfg",
"base": "0xFD010000",
"high": "0xFD01FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu2_cfg": {"name": "psu_ddr_xmpu2_cfg",
"base": "0xFD020000",
"high": "0xFD02FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu3_cfg": {"name": "psu_ddr_xmpu3_cfg",
"base": "0xFD030000",
"high": "0xFD03FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu4_cfg": {"name": "psu_ddr_xmpu4_cfg",
"base": "0xFD040000",
"high": "0xFD04FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu5_cfg": {"name": "psu_ddr_xmpu5_cfg",
"base": "0xFD050000",
"high": "0xFD05FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddrc_0": {"name": "psu_ddrc_0",
"base": "0xFD070000",
"high": "0xFD070FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_efuse": {"name": "psu_efuse",
"base": "0xFFCC0000",
"high": "0xFFCCFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_gpv": {"name": "psu_fpd_gpv",
"base": "0xFD700000",
"high": "0xFD7FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr": {"name": "psu_fpd_slcr",
"base": "0xFD610000",
"high": "0xFD68FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr_secure": {"name": "psu_fpd_slcr_secure",
"base": "0xFD690000",
"high": "0xFD6CFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_cfg": {"name": "psu_fpd_xmpu_cfg",
"base": "0xFD5D0000",
"high": "0xFD5DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_sink": {"name": "psu_fpd_xmpu_sink",
"base": "0xFD4F0000",
"high": "0xFD4FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_0": {"name": "psu_gdma_0",
"base": "0xFD500000",
"high": "0xFD50FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_1": {"name": "psu_gdma_1",
"base": "0xFD510000",
"high": "0xFD51FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_2": {"name": "psu_gdma_2",
"base": "0xFD520000",
"high": "0xFD52FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_3": {"name": "psu_gdma_3",
"base": "0xFD530000",
"high": "0xFD53FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_4": {"name": "psu_gdma_4",
"base": "0xFD540000",
"high": "0xFD54FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_5": {"name": "psu_gdma_5",
"base": "0xFD550000",
"high": "0xFD55FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_6": {"name": "psu_gdma_6",
"base": "0xFD560000",
"high": "0xFD56FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_7": {"name": "psu_gdma_7",
"base": "0xFD570000",
"high": "0xFD57FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gpio_0": {"name": "psu_gpio_0",
"base": "0xFF0A0000",
"high": "0xFF0AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntr": {"name": "psu_iou_scntr",
"base": "0xFF250000",
"high": "0xFF25FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntrs": {"name": "psu_iou_scntrs",
"base": "0xFF260000",
"high": "0xFF26FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iousecure_slcr": {"name": "psu_iousecure_slcr",
"base": "0xFF240000",
"high": "0xFF24FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iouslcr_0": {"name": "psu_iouslcr_0",
"base": "0xFF180000",
"high": "0xFF23FFFF",
"size": "786432",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ipi_0": {"name": "psu_ipi_0",
"base": "0xFF300000",
"high": "0xFF30FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_lpd_slcr": {"name": "psu_lpd_slcr",
"base": "0xFF410000",
"high": "0xFF4AFFFF",
"size": "655360",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_slcr_secure": {"name": "psu_lpd_slcr_secure",
"base": "0xFF4B0000",
"high": "0xFF4DFFFF",
"size": "196608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu": {"name": "psu_lpd_xppu",
"base": "0xFF980000",
"high": "0xFF98FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu_sink": {"name": "psu_lpd_xppu_sink",
"base": "0xFF9C0000",
"high": "0xFF9CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_mbistjtag": {"name": "psu_mbistjtag",
"base": "0xFFCF0000",
"high": "0xFFCFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_message_buffers": {"name": "psu_message_buffers",
"base": "0xFF990000",
"high": "0xFF99FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm": {"name": "psu_ocm",
"base": "0xFF960000",
"high": "0xFF96FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_xmpu_cfg": {"name": "psu_ocm_xmpu_cfg",
"base": "0xFFA70000",
"high": "0xFFA7FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_global_0": {"name": "psu_pmu_global_0",
"base": "0xFFD80000",
"high": "0xFFDBFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rcpu_gic": {"name": "psu_rcpu_gic",
"base": "0xF9000000",
"high": "0xF900FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rpu": {"name": "psu_rpu",
"base": "0xFF9A0000",
"high": "0xFF9AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rsa": {"name": "psu_rsa",
"base": "0xFFCE0000",
"high": "0xFFCEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rtc": {"name": "psu_rtc",
"base": "0xFFA60000",
"high": "0xFFA6FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_sd_0": {"name": "psu_sd_0",
"base": "0xFF160000",
"high": "0xFF16FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_serdes": {"name": "psu_serdes",
"base": "0xFD400000",
"high": "0xFD47FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_siou": {"name": "psu_siou",
"base": "0xFD3D0000",
"high": "0xFD3DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_gpv": {"name": "psu_smmu_gpv",
"base": "0xFD800000",
"high": "0xFDFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_reg": {"name": "psu_smmu_reg",
"base": "0xFD5F0000",
"high": "0xFD5FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_uart_0": {"name": "psu_uart_0",
"base": "0xFF000000",
"high": "0xFF00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_0_MEM_0": {"name": "psu_ddr_0",
"base": "0x0",
"high": "0xFEFFFFF",
"size": "267386880",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_ram_0_MEM_0": {"name": "psu_ocm_ram_0",
"base": "0xFFFC0000",
"high": "0xFFFFFFFF",
"size": "262144",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.429
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_ENABLED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.429
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.429
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_EVENT_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.444
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.444
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.444
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.458
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_COUNTER_WIDTH], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.461
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.461
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_FREQ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.477
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_FREQ], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.477
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_CPU_CLK_FREQ_HZ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.493
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_0 C_CPU_CLK_FREQ_HZ], Result: [null, 1200000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.495
!MESSAGE XSCT Command: [::hsi::utils::get_cpu_nr -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.508
!MESSAGE XSCT command with result: [::hsi::utils::get_cpu_nr -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"psu_cortexa53_0": {"bscan": "",
"index": "0",
},
"psu_cortexa53_1": {"bscan": "",
"index": "1",
},
"psu_cortexr5_0": {"bscan": "",
"index": "0",
},
"psu_cortexr5_1": {"bscan": "",
"index": "1",
},
"psu_pmu_0": {"bscan": "",
"index": "1",
},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.508
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.635
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354584,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354588,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354600,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354632,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354636,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354648,
},
},
"axi_dma_1": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485632,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485636,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485656,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485660,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485672,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485680,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485684,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485704,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485708,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485720,
},
},
"axi_quad_spi_ADC": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420160,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420192,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420196,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420208,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420212,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420216,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420124,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420200,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420204,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420128,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420136,
},
},
"axi_quad_spi_DVGA": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551232,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551264,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551268,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551280,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551284,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551288,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551196,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551272,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551276,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551200,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551208,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_efuse": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_0": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pmu_global_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sd_0": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_uart_0": {},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.635
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.698
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1], Result: [null, {"axi_dma_0_S_AXI_LITE": {"name": "axi_dma_0",
"base": "0xA0000000",
"high": "0xA000FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_ADC_AXI_LITE": {"name": "axi_quad_spi_ADC",
"base": "0xA0010000",
"high": "0xA001FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_1_S_AXI_LITE": {"name": "axi_dma_1",
"base": "0xA0020000",
"high": "0xA002FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_DVGA_AXI_LITE": {"name": "axi_quad_spi_DVGA",
"base": "0xA0030000",
"high": "0xA003FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"psu_acpu_gic": {"name": "psu_acpu_gic",
"base": "0xF9010000",
"high": "0xF907FFFF",
"size": "458752",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_0": {"name": "psu_adma_0",
"base": "0xFFA80000",
"high": "0xFFA8FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_1": {"name": "psu_adma_1",
"base": "0xFFA90000",
"high": "0xFFA9FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_2": {"name": "psu_adma_2",
"base": "0xFFAA0000",
"high": "0xFFAAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_3": {"name": "psu_adma_3",
"base": "0xFFAB0000",
"high": "0xFFABFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_4": {"name": "psu_adma_4",
"base": "0xFFAC0000",
"high": "0xFFACFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_5": {"name": "psu_adma_5",
"base": "0xFFAD0000",
"high": "0xFFADFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_6": {"name": "psu_adma_6",
"base": "0xFFAE0000",
"high": "0xFFAEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_7": {"name": "psu_adma_7",
"base": "0xFFAF0000",
"high": "0xFFAFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_0": {"name": "psu_afi_0",
"base": "0xFD360000",
"high": "0xFD36FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_1": {"name": "psu_afi_1",
"base": "0xFD370000",
"high": "0xFD37FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_2": {"name": "psu_afi_2",
"base": "0xFD380000",
"high": "0xFD38FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_3": {"name": "psu_afi_3",
"base": "0xFD390000",
"high": "0xFD39FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_4": {"name": "psu_afi_4",
"base": "0xFD3A0000",
"high": "0xFD3AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_5": {"name": "psu_afi_5",
"base": "0xFD3B0000",
"high": "0xFD3BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_6": {"name": "psu_afi_6",
"base": "0xFF9B0000",
"high": "0xFF9BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ams": {"name": "psu_ams",
"base": "0xFFA50000",
"high": "0xFFA5FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_0": {"name": "psu_apm_0",
"base": "0xFD0B0000",
"high": "0xFD0BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_1": {"name": "psu_apm_1",
"base": "0xFFA00000",
"high": "0xFFA0FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_2": {"name": "psu_apm_2",
"base": "0xFFA10000",
"high": "0xFFA1FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_5": {"name": "psu_apm_5",
"base": "0xFD490000",
"high": "0xFD49FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apu": {"name": "psu_apu",
"base": "0xFD5C0000",
"high": "0xFD5CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_gpv": {"name": "psu_cci_gpv",
"base": "0xFD6E0000",
"high": "0xFD6EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_reg": {"name": "psu_cci_reg",
"base": "0xFD5E0000",
"high": "0xFD5EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_coresight_0": {"name": "psu_coresight_0",
"base": "0xFE800000",
"high": "0xFEFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crf_apb": {"name": "psu_crf_apb",
"base": "0xFD1A0000",
"high": "0xFD2DFFFF",
"size": "1310720",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crl_apb": {"name": "psu_crl_apb",
"base": "0xFF5E0000",
"high": "0xFF85FFFF",
"size": "2621440",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csu_0": {"name": "psu_csu_0",
"base": "0xFFCA0000",
"high": "0xFFCAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csudma": {"name": "psu_csudma",
"base": "0xFFC80000",
"high": "0xFFC9FFFF",
"size": "131072",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ctrl_ipi": {"name": "psu_ctrl_ipi",
"base": "0xFF380000",
"high": "0xFF3FFFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_phy": {"name": "psu_ddr_phy",
"base": "0xFD080000",
"high": "0xFD08FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_qos_ctrl": {"name": "psu_ddr_qos_ctrl",
"base": "0xFD090000",
"high": "0xFD09FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu0_cfg": {"name": "psu_ddr_xmpu0_cfg",
"base": "0xFD000000",
"high": "0xFD00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu1_cfg": {"name": "psu_ddr_xmpu1_cfg",
"base": "0xFD010000",
"high": "0xFD01FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu2_cfg": {"name": "psu_ddr_xmpu2_cfg",
"base": "0xFD020000",
"high": "0xFD02FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu3_cfg": {"name": "psu_ddr_xmpu3_cfg",
"base": "0xFD030000",
"high": "0xFD03FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu4_cfg": {"name": "psu_ddr_xmpu4_cfg",
"base": "0xFD040000",
"high": "0xFD04FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu5_cfg": {"name": "psu_ddr_xmpu5_cfg",
"base": "0xFD050000",
"high": "0xFD05FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddrc_0": {"name": "psu_ddrc_0",
"base": "0xFD070000",
"high": "0xFD070FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_efuse": {"name": "psu_efuse",
"base": "0xFFCC0000",
"high": "0xFFCCFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_gpv": {"name": "psu_fpd_gpv",
"base": "0xFD700000",
"high": "0xFD7FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr": {"name": "psu_fpd_slcr",
"base": "0xFD610000",
"high": "0xFD68FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr_secure": {"name": "psu_fpd_slcr_secure",
"base": "0xFD690000",
"high": "0xFD6CFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_cfg": {"name": "psu_fpd_xmpu_cfg",
"base": "0xFD5D0000",
"high": "0xFD5DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_sink": {"name": "psu_fpd_xmpu_sink",
"base": "0xFD4F0000",
"high": "0xFD4FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_0": {"name": "psu_gdma_0",
"base": "0xFD500000",
"high": "0xFD50FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_1": {"name": "psu_gdma_1",
"base": "0xFD510000",
"high": "0xFD51FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_2": {"name": "psu_gdma_2",
"base": "0xFD520000",
"high": "0xFD52FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_3": {"name": "psu_gdma_3",
"base": "0xFD530000",
"high": "0xFD53FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_4": {"name": "psu_gdma_4",
"base": "0xFD540000",
"high": "0xFD54FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_5": {"name": "psu_gdma_5",
"base": "0xFD550000",
"high": "0xFD55FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_6": {"name": "psu_gdma_6",
"base": "0xFD560000",
"high": "0xFD56FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_7": {"name": "psu_gdma_7",
"base": "0xFD570000",
"high": "0xFD57FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gpio_0": {"name": "psu_gpio_0",
"base": "0xFF0A0000",
"high": "0xFF0AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntr": {"name": "psu_iou_scntr",
"base": "0xFF250000",
"high": "0xFF25FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntrs": {"name": "psu_iou_scntrs",
"base": "0xFF260000",
"high": "0xFF26FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iousecure_slcr": {"name": "psu_iousecure_slcr",
"base": "0xFF240000",
"high": "0xFF24FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iouslcr_0": {"name": "psu_iouslcr_0",
"base": "0xFF180000",
"high": "0xFF23FFFF",
"size": "786432",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ipi_0": {"name": "psu_ipi_0",
"base": "0xFF300000",
"high": "0xFF30FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_lpd_slcr": {"name": "psu_lpd_slcr",
"base": "0xFF410000",
"high": "0xFF4AFFFF",
"size": "655360",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_slcr_secure": {"name": "psu_lpd_slcr_secure",
"base": "0xFF4B0000",
"high": "0xFF4DFFFF",
"size": "196608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu": {"name": "psu_lpd_xppu",
"base": "0xFF980000",
"high": "0xFF98FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu_sink": {"name": "psu_lpd_xppu_sink",
"base": "0xFF9C0000",
"high": "0xFF9CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_mbistjtag": {"name": "psu_mbistjtag",
"base": "0xFFCF0000",
"high": "0xFFCFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_message_buffers": {"name": "psu_message_buffers",
"base": "0xFF990000",
"high": "0xFF99FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm": {"name": "psu_ocm",
"base": "0xFF960000",
"high": "0xFF96FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_xmpu_cfg": {"name": "psu_ocm_xmpu_cfg",
"base": "0xFFA70000",
"high": "0xFFA7FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_global_0": {"name": "psu_pmu_global_0",
"base": "0xFFD80000",
"high": "0xFFDBFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rcpu_gic": {"name": "psu_rcpu_gic",
"base": "0xF9000000",
"high": "0xF900FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rpu": {"name": "psu_rpu",
"base": "0xFF9A0000",
"high": "0xFF9AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rsa": {"name": "psu_rsa",
"base": "0xFFCE0000",
"high": "0xFFCEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rtc": {"name": "psu_rtc",
"base": "0xFFA60000",
"high": "0xFFA6FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_sd_0": {"name": "psu_sd_0",
"base": "0xFF160000",
"high": "0xFF16FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_serdes": {"name": "psu_serdes",
"base": "0xFD400000",
"high": "0xFD47FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_siou": {"name": "psu_siou",
"base": "0xFD3D0000",
"high": "0xFD3DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_gpv": {"name": "psu_smmu_gpv",
"base": "0xFD800000",
"high": "0xFDFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_reg": {"name": "psu_smmu_reg",
"base": "0xFD5F0000",
"high": "0xFD5FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_uart_0": {"name": "psu_uart_0",
"base": "0xFF000000",
"high": "0xFF00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_0_MEM_0": {"name": "psu_ddr_0",
"base": "0x0",
"high": "0xFEFFFFF",
"size": "267386880",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_ram_0_MEM_0": {"name": "psu_ocm_ram_0",
"base": "0xFFFC0000",
"high": "0xFFFFFFFF",
"size": "262144",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.698
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_ENABLED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.720
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.730
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_EVENT_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.730
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.745
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.745
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.759
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_COUNTER_WIDTH], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.761
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.761
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_FREQ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.777
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_FREQ], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.777
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_CPU_CLK_FREQ_HZ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.793
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexa53_1 C_CPU_CLK_FREQ_HZ], Result: [null, 1200000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.793
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.890
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354584,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354588,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354600,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354632,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354636,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354648,
},
},
"axi_dma_1": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485632,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485636,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485656,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485660,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485672,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485680,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485684,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485704,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485708,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485720,
},
},
"axi_quad_spi_ADC": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420160,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420192,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420196,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420208,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420212,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420216,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420124,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420200,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420204,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420128,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420136,
},
},
"axi_quad_spi_DVGA": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551232,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551264,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551268,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551280,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551284,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551288,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551196,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551272,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551276,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551200,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551208,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_efuse": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_1": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pmu_global_0": {},
"psu_r5_0_atcm": {},
"psu_r5_0_btcm": {},
"psu_r5_ddr_0": {},
"psu_r5_tcm_ram_0": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sd_0": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_uart_0": {},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.903
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.938
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0], Result: [null, {"axi_dma_0_S_AXI_LITE": {"name": "axi_dma_0",
"base": "0xA0000000",
"high": "0xA000FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_ADC_AXI_LITE": {"name": "axi_quad_spi_ADC",
"base": "0xA0010000",
"high": "0xA001FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_1_S_AXI_LITE": {"name": "axi_dma_1",
"base": "0xA0020000",
"high": "0xA002FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_DVGA_AXI_LITE": {"name": "axi_quad_spi_DVGA",
"base": "0xA0030000",
"high": "0xA003FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"psu_acpu_gic": {"name": "psu_acpu_gic",
"base": "0xF9010000",
"high": "0xF907FFFF",
"size": "458752",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_0": {"name": "psu_adma_0",
"base": "0xFFA80000",
"high": "0xFFA8FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_1": {"name": "psu_adma_1",
"base": "0xFFA90000",
"high": "0xFFA9FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_2": {"name": "psu_adma_2",
"base": "0xFFAA0000",
"high": "0xFFAAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_3": {"name": "psu_adma_3",
"base": "0xFFAB0000",
"high": "0xFFABFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_4": {"name": "psu_adma_4",
"base": "0xFFAC0000",
"high": "0xFFACFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_5": {"name": "psu_adma_5",
"base": "0xFFAD0000",
"high": "0xFFADFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_6": {"name": "psu_adma_6",
"base": "0xFFAE0000",
"high": "0xFFAEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_7": {"name": "psu_adma_7",
"base": "0xFFAF0000",
"high": "0xFFAFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_0": {"name": "psu_afi_0",
"base": "0xFD360000",
"high": "0xFD36FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_1": {"name": "psu_afi_1",
"base": "0xFD370000",
"high": "0xFD37FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_2": {"name": "psu_afi_2",
"base": "0xFD380000",
"high": "0xFD38FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_3": {"name": "psu_afi_3",
"base": "0xFD390000",
"high": "0xFD39FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_4": {"name": "psu_afi_4",
"base": "0xFD3A0000",
"high": "0xFD3AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_5": {"name": "psu_afi_5",
"base": "0xFD3B0000",
"high": "0xFD3BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_6": {"name": "psu_afi_6",
"base": "0xFF9B0000",
"high": "0xFF9BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ams": {"name": "psu_ams",
"base": "0xFFA50000",
"high": "0xFFA5FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_0": {"name": "psu_apm_0",
"base": "0xFD0B0000",
"high": "0xFD0BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_1": {"name": "psu_apm_1",
"base": "0xFFA00000",
"high": "0xFFA0FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_2": {"name": "psu_apm_2",
"base": "0xFFA10000",
"high": "0xFFA1FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_5": {"name": "psu_apm_5",
"base": "0xFD490000",
"high": "0xFD49FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apu": {"name": "psu_apu",
"base": "0xFD5C0000",
"high": "0xFD5CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_gpv": {"name": "psu_cci_gpv",
"base": "0xFD6E0000",
"high": "0xFD6EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_reg": {"name": "psu_cci_reg",
"base": "0xFD5E0000",
"high": "0xFD5EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_coresight_0": {"name": "psu_coresight_0",
"base": "0xFE800000",
"high": "0xFEFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crf_apb": {"name": "psu_crf_apb",
"base": "0xFD1A0000",
"high": "0xFD2DFFFF",
"size": "1310720",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crl_apb": {"name": "psu_crl_apb",
"base": "0xFF5E0000",
"high": "0xFF85FFFF",
"size": "2621440",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csu_0": {"name": "psu_csu_0",
"base": "0xFFCA0000",
"high": "0xFFCAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csudma": {"name": "psu_csudma",
"base": "0xFFC80000",
"high": "0xFFC9FFFF",
"size": "131072",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ctrl_ipi": {"name": "psu_ctrl_ipi",
"base": "0xFF380000",
"high": "0xFF3FFFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_phy": {"name": "psu_ddr_phy",
"base": "0xFD080000",
"high": "0xFD08FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_qos_ctrl": {"name": "psu_ddr_qos_ctrl",
"base": "0xFD090000",
"high": "0xFD09FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu0_cfg": {"name": "psu_ddr_xmpu0_cfg",
"base": "0xFD000000",
"high": "0xFD00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu1_cfg": {"name": "psu_ddr_xmpu1_cfg",
"base": "0xFD010000",
"high": "0xFD01FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu2_cfg": {"name": "psu_ddr_xmpu2_cfg",
"base": "0xFD020000",
"high": "0xFD02FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu3_cfg": {"name": "psu_ddr_xmpu3_cfg",
"base": "0xFD030000",
"high": "0xFD03FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu4_cfg": {"name": "psu_ddr_xmpu4_cfg",
"base": "0xFD040000",
"high": "0xFD04FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu5_cfg": {"name": "psu_ddr_xmpu5_cfg",
"base": "0xFD050000",
"high": "0xFD05FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddrc_0": {"name": "psu_ddrc_0",
"base": "0xFD070000",
"high": "0xFD070FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_efuse": {"name": "psu_efuse",
"base": "0xFFCC0000",
"high": "0xFFCCFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_gpv": {"name": "psu_fpd_gpv",
"base": "0xFD700000",
"high": "0xFD7FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr": {"name": "psu_fpd_slcr",
"base": "0xFD610000",
"high": "0xFD68FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr_secure": {"name": "psu_fpd_slcr_secure",
"base": "0xFD690000",
"high": "0xFD6CFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_cfg": {"name": "psu_fpd_xmpu_cfg",
"base": "0xFD5D0000",
"high": "0xFD5DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_sink": {"name": "psu_fpd_xmpu_sink",
"base": "0xFD4F0000",
"high": "0xFD4FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_0": {"name": "psu_gdma_0",
"base": "0xFD500000",
"high": "0xFD50FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_1": {"name": "psu_gdma_1",
"base": "0xFD510000",
"high": "0xFD51FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_2": {"name": "psu_gdma_2",
"base": "0xFD520000",
"high": "0xFD52FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_3": {"name": "psu_gdma_3",
"base": "0xFD530000",
"high": "0xFD53FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_4": {"name": "psu_gdma_4",
"base": "0xFD540000",
"high": "0xFD54FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_5": {"name": "psu_gdma_5",
"base": "0xFD550000",
"high": "0xFD55FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_6": {"name": "psu_gdma_6",
"base": "0xFD560000",
"high": "0xFD56FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_7": {"name": "psu_gdma_7",
"base": "0xFD570000",
"high": "0xFD57FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gpio_0": {"name": "psu_gpio_0",
"base": "0xFF0A0000",
"high": "0xFF0AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntr": {"name": "psu_iou_scntr",
"base": "0xFF250000",
"high": "0xFF25FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntrs": {"name": "psu_iou_scntrs",
"base": "0xFF260000",
"high": "0xFF26FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iousecure_slcr": {"name": "psu_iousecure_slcr",
"base": "0xFF240000",
"high": "0xFF24FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iouslcr_0": {"name": "psu_iouslcr_0",
"base": "0xFF180000",
"high": "0xFF23FFFF",
"size": "786432",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ipi_1": {"name": "psu_ipi_1",
"base": "0xFF310000",
"high": "0xFF31FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_lpd_slcr": {"name": "psu_lpd_slcr",
"base": "0xFF410000",
"high": "0xFF4AFFFF",
"size": "655360",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_slcr_secure": {"name": "psu_lpd_slcr_secure",
"base": "0xFF4B0000",
"high": "0xFF4DFFFF",
"size": "196608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu": {"name": "psu_lpd_xppu",
"base": "0xFF980000",
"high": "0xFF98FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu_sink": {"name": "psu_lpd_xppu_sink",
"base": "0xFF9C0000",
"high": "0xFF9CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_mbistjtag": {"name": "psu_mbistjtag",
"base": "0xFFCF0000",
"high": "0xFFCFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_message_buffers": {"name": "psu_message_buffers",
"base": "0xFF990000",
"high": "0xFF99FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm": {"name": "psu_ocm",
"base": "0xFF960000",
"high": "0xFF96FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_xmpu_cfg": {"name": "psu_ocm_xmpu_cfg",
"base": "0xFFA70000",
"high": "0xFFA7FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_global_0": {"name": "psu_pmu_global_0",
"base": "0xFFD80000",
"high": "0xFFDBFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rcpu_gic": {"name": "psu_rcpu_gic",
"base": "0xF9000000",
"high": "0xF900FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rpu": {"name": "psu_rpu",
"base": "0xFF9A0000",
"high": "0xFF9AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rsa": {"name": "psu_rsa",
"base": "0xFFCE0000",
"high": "0xFFCEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rtc": {"name": "psu_rtc",
"base": "0xFFA60000",
"high": "0xFFA6FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_sd_0": {"name": "psu_sd_0",
"base": "0xFF160000",
"high": "0xFF16FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_serdes": {"name": "psu_serdes",
"base": "0xFD400000",
"high": "0xFD47FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_siou": {"name": "psu_siou",
"base": "0xFD3D0000",
"high": "0xFD3DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_gpv": {"name": "psu_smmu_gpv",
"base": "0xFD800000",
"high": "0xFDFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_reg": {"name": "psu_smmu_reg",
"base": "0xFD5F0000",
"high": "0xFD5FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_uart_0": {"name": "psu_uart_0",
"base": "0xFF000000",
"high": "0xFF00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_ram_0_MEM_0": {"name": "psu_ocm_ram_0",
"base": "0xFFFC0000",
"high": "0xFFFFFFFF",
"size": "262144",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_0_atcm_MEM_0": {"name": "psu_r5_0_atcm",
"base": "0x0",
"high": "0xFFFF",
"size": "65536",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_0_btcm_MEM_0": {"name": "psu_r5_0_btcm",
"base": "0x20000",
"high": "0x2FFFF",
"size": "65536",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_ddr_0_MEM_0": {"name": "psu_r5_ddr_0",
"base": "0x100000",
"high": "0xFEFFFFF",
"size": "266338304",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_tcm_ram_0_MEM_0": {"name": "psu_r5_tcm_ram_0",
"base": "0x0",
"high": "0x0003FFFF",
"size": "262144",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.960
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_ENABLED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.967
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.967
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_EVENT_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.967
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.982
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.998
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.999
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_COUNTER_WIDTH], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:29.999
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.014
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_FREQ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.014
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_FREQ], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.066
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_CPU_CLK_FREQ_HZ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.076
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_0 C_CPU_CLK_FREQ_HZ], Result: [null, 500000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.076
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.218
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354584,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354588,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354600,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354632,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354636,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354648,
},
},
"axi_dma_1": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485632,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485636,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485656,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485660,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485672,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485680,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485684,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485704,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485708,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485720,
},
},
"axi_quad_spi_ADC": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420160,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420192,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420196,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420208,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420212,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420216,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420124,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420200,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420204,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420128,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420136,
},
},
"axi_quad_spi_DVGA": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551232,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551264,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551268,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551280,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551284,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551288,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551196,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551272,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551276,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551200,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551208,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_efuse": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_2": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pmu_global_0": {},
"psu_r5_1_atcm": {},
"psu_r5_1_btcm": {},
"psu_r5_ddr_0": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sd_0": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_uart_0": {},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.233
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.269
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1], Result: [null, {"axi_dma_0_S_AXI_LITE": {"name": "axi_dma_0",
"base": "0xA0000000",
"high": "0xA000FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_ADC_AXI_LITE": {"name": "axi_quad_spi_ADC",
"base": "0xA0010000",
"high": "0xA001FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_1_S_AXI_LITE": {"name": "axi_dma_1",
"base": "0xA0020000",
"high": "0xA002FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_DVGA_AXI_LITE": {"name": "axi_quad_spi_DVGA",
"base": "0xA0030000",
"high": "0xA003FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"psu_acpu_gic": {"name": "psu_acpu_gic",
"base": "0xF9010000",
"high": "0xF907FFFF",
"size": "458752",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_0": {"name": "psu_adma_0",
"base": "0xFFA80000",
"high": "0xFFA8FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_1": {"name": "psu_adma_1",
"base": "0xFFA90000",
"high": "0xFFA9FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_2": {"name": "psu_adma_2",
"base": "0xFFAA0000",
"high": "0xFFAAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_3": {"name": "psu_adma_3",
"base": "0xFFAB0000",
"high": "0xFFABFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_4": {"name": "psu_adma_4",
"base": "0xFFAC0000",
"high": "0xFFACFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_5": {"name": "psu_adma_5",
"base": "0xFFAD0000",
"high": "0xFFADFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_6": {"name": "psu_adma_6",
"base": "0xFFAE0000",
"high": "0xFFAEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_7": {"name": "psu_adma_7",
"base": "0xFFAF0000",
"high": "0xFFAFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_0": {"name": "psu_afi_0",
"base": "0xFD360000",
"high": "0xFD36FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_1": {"name": "psu_afi_1",
"base": "0xFD370000",
"high": "0xFD37FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_2": {"name": "psu_afi_2",
"base": "0xFD380000",
"high": "0xFD38FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_3": {"name": "psu_afi_3",
"base": "0xFD390000",
"high": "0xFD39FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_4": {"name": "psu_afi_4",
"base": "0xFD3A0000",
"high": "0xFD3AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_5": {"name": "psu_afi_5",
"base": "0xFD3B0000",
"high": "0xFD3BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_6": {"name": "psu_afi_6",
"base": "0xFF9B0000",
"high": "0xFF9BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ams": {"name": "psu_ams",
"base": "0xFFA50000",
"high": "0xFFA5FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_0": {"name": "psu_apm_0",
"base": "0xFD0B0000",
"high": "0xFD0BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_1": {"name": "psu_apm_1",
"base": "0xFFA00000",
"high": "0xFFA0FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_2": {"name": "psu_apm_2",
"base": "0xFFA10000",
"high": "0xFFA1FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_5": {"name": "psu_apm_5",
"base": "0xFD490000",
"high": "0xFD49FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apu": {"name": "psu_apu",
"base": "0xFD5C0000",
"high": "0xFD5CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_gpv": {"name": "psu_cci_gpv",
"base": "0xFD6E0000",
"high": "0xFD6EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_reg": {"name": "psu_cci_reg",
"base": "0xFD5E0000",
"high": "0xFD5EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_coresight_0": {"name": "psu_coresight_0",
"base": "0xFE800000",
"high": "0xFEFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crf_apb": {"name": "psu_crf_apb",
"base": "0xFD1A0000",
"high": "0xFD2DFFFF",
"size": "1310720",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crl_apb": {"name": "psu_crl_apb",
"base": "0xFF5E0000",
"high": "0xFF85FFFF",
"size": "2621440",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csu_0": {"name": "psu_csu_0",
"base": "0xFFCA0000",
"high": "0xFFCAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csudma": {"name": "psu_csudma",
"base": "0xFFC80000",
"high": "0xFFC9FFFF",
"size": "131072",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ctrl_ipi": {"name": "psu_ctrl_ipi",
"base": "0xFF380000",
"high": "0xFF3FFFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_phy": {"name": "psu_ddr_phy",
"base": "0xFD080000",
"high": "0xFD08FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_qos_ctrl": {"name": "psu_ddr_qos_ctrl",
"base": "0xFD090000",
"high": "0xFD09FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu0_cfg": {"name": "psu_ddr_xmpu0_cfg",
"base": "0xFD000000",
"high": "0xFD00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu1_cfg": {"name": "psu_ddr_xmpu1_cfg",
"base": "0xFD010000",
"high": "0xFD01FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu2_cfg": {"name": "psu_ddr_xmpu2_cfg",
"base": "0xFD020000",
"high": "0xFD02FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu3_cfg": {"name": "psu_ddr_xmpu3_cfg",
"base": "0xFD030000",
"high": "0xFD03FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu4_cfg": {"name": "psu_ddr_xmpu4_cfg",
"base": "0xFD040000",
"high": "0xFD04FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu5_cfg": {"name": "psu_ddr_xmpu5_cfg",
"base": "0xFD050000",
"high": "0xFD05FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddrc_0": {"name": "psu_ddrc_0",
"base": "0xFD070000",
"high": "0xFD070FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_efuse": {"name": "psu_efuse",
"base": "0xFFCC0000",
"high": "0xFFCCFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_gpv": {"name": "psu_fpd_gpv",
"base": "0xFD700000",
"high": "0xFD7FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr": {"name": "psu_fpd_slcr",
"base": "0xFD610000",
"high": "0xFD68FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr_secure": {"name": "psu_fpd_slcr_secure",
"base": "0xFD690000",
"high": "0xFD6CFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_cfg": {"name": "psu_fpd_xmpu_cfg",
"base": "0xFD5D0000",
"high": "0xFD5DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_sink": {"name": "psu_fpd_xmpu_sink",
"base": "0xFD4F0000",
"high": "0xFD4FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_0": {"name": "psu_gdma_0",
"base": "0xFD500000",
"high": "0xFD50FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_1": {"name": "psu_gdma_1",
"base": "0xFD510000",
"high": "0xFD51FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_2": {"name": "psu_gdma_2",
"base": "0xFD520000",
"high": "0xFD52FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_3": {"name": "psu_gdma_3",
"base": "0xFD530000",
"high": "0xFD53FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_4": {"name": "psu_gdma_4",
"base": "0xFD540000",
"high": "0xFD54FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_5": {"name": "psu_gdma_5",
"base": "0xFD550000",
"high": "0xFD55FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_6": {"name": "psu_gdma_6",
"base": "0xFD560000",
"high": "0xFD56FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_7": {"name": "psu_gdma_7",
"base": "0xFD570000",
"high": "0xFD57FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gpio_0": {"name": "psu_gpio_0",
"base": "0xFF0A0000",
"high": "0xFF0AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntr": {"name": "psu_iou_scntr",
"base": "0xFF250000",
"high": "0xFF25FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntrs": {"name": "psu_iou_scntrs",
"base": "0xFF260000",
"high": "0xFF26FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iousecure_slcr": {"name": "psu_iousecure_slcr",
"base": "0xFF240000",
"high": "0xFF24FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iouslcr_0": {"name": "psu_iouslcr_0",
"base": "0xFF180000",
"high": "0xFF23FFFF",
"size": "786432",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ipi_2": {"name": "psu_ipi_2",
"base": "0xFF320000",
"high": "0xFF32FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_lpd_slcr": {"name": "psu_lpd_slcr",
"base": "0xFF410000",
"high": "0xFF4AFFFF",
"size": "655360",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_slcr_secure": {"name": "psu_lpd_slcr_secure",
"base": "0xFF4B0000",
"high": "0xFF4DFFFF",
"size": "196608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu": {"name": "psu_lpd_xppu",
"base": "0xFF980000",
"high": "0xFF98FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu_sink": {"name": "psu_lpd_xppu_sink",
"base": "0xFF9C0000",
"high": "0xFF9CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_mbistjtag": {"name": "psu_mbistjtag",
"base": "0xFFCF0000",
"high": "0xFFCFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_message_buffers": {"name": "psu_message_buffers",
"base": "0xFF990000",
"high": "0xFF99FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm": {"name": "psu_ocm",
"base": "0xFF960000",
"high": "0xFF96FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_xmpu_cfg": {"name": "psu_ocm_xmpu_cfg",
"base": "0xFFA70000",
"high": "0xFFA7FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_global_0": {"name": "psu_pmu_global_0",
"base": "0xFFD80000",
"high": "0xFFDBFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rcpu_gic": {"name": "psu_rcpu_gic",
"base": "0xF9000000",
"high": "0xF900FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rpu": {"name": "psu_rpu",
"base": "0xFF9A0000",
"high": "0xFF9AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rsa": {"name": "psu_rsa",
"base": "0xFFCE0000",
"high": "0xFFCEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rtc": {"name": "psu_rtc",
"base": "0xFFA60000",
"high": "0xFFA6FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_sd_0": {"name": "psu_sd_0",
"base": "0xFF160000",
"high": "0xFF16FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_serdes": {"name": "psu_serdes",
"base": "0xFD400000",
"high": "0xFD47FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_siou": {"name": "psu_siou",
"base": "0xFD3D0000",
"high": "0xFD3DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_gpv": {"name": "psu_smmu_gpv",
"base": "0xFD800000",
"high": "0xFDFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_reg": {"name": "psu_smmu_reg",
"base": "0xFD5F0000",
"high": "0xFD5FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_uart_0": {"name": "psu_uart_0",
"base": "0xFF000000",
"high": "0xFF00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_ram_0_MEM_0": {"name": "psu_ocm_ram_0",
"base": "0xFFFC0000",
"high": "0xFFFFFFFF",
"size": "262144",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_1_atcm_MEM_0": {"name": "psu_r5_1_atcm",
"base": "0x0",
"high": "0xFFFF",
"size": "65536",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_1_btcm_MEM_0": {"name": "psu_r5_1_btcm",
"base": "0x20000",
"high": "0x2FFFF",
"size": "65536",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_r5_ddr_0_MEM_0": {"name": "psu_r5_ddr_0",
"base": "0x100000",
"high": "0xFEFFFFF",
"size": "266338304",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.281
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_ENABLED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.281
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.297
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_EVENT_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.297
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.312
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.312
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.312
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_COUNTER_WIDTH], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.328
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.328
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_FREQ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.328
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_FREQ], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.343
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_CPU_CLK_FREQ_HZ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.343
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_cortexr5_1 C_CPU_CLK_FREQ_HZ], Result: [null, 500000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.360
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.470
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354584,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354588,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354600,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354632,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354636,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354648,
},
},
"axi_dma_1": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485632,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485636,
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485656,
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485660,
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485672,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485680,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485684,
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485704,
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485708,
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684485720,
},
},
"axi_quad_spi_ADC": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420160,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420192,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420196,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420208,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420212,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420216,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420124,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420200,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420204,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420128,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420136,
},
},
"axi_quad_spi_DVGA": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x40",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Reset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The only allowed operation on this register is a write of 0x0000000a, which resets the AXI Quad SPI core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551232,
},
"SPICR": {"description": "SPI Control Register",
"address_offset": "0x60",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"LOOP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Local loopback mode
Enables local loopback operation and is functional only in standard SPI master mode.
When set to:   0 - Normal operation.   1 - Loopback mode. The transmitter output is internally connected to the receiver input. The receiver and transmitter operate normally, except that received data (from remote slave) is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "SPI system enable
When set to:
  0 - SPI system disabled. Both master and slave outputs are in 3-state and slave inputs are ignored.
  1 - SPI system enabled. Master outputs active (for example, IO0 (MOSI) and SCK in idle state) and slave outputs become active if SS becomes asserted. The master starts transferring when transmit data is available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Master (SPI master mode)
Setting this bit configures the SPI device as a master or a slave.
When set to:
  0 - Slave configuration.
  1 - Master configuration.
In dual/quad SPI mode only the master mode of the core is allowed.
Standard Slave mode is not supported for SCK ratio = 2
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Clock polarity
Setting this bit defines clock polarity.
When set to:
  0 - Active-High clock; SCK idles Low.
  1 - Active-Low clock; SCK idles High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPHA": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Clock phase
Setting this bit selects one of two fundamentally different transfer formats.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Reset": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO reset
When written to 1, this bit forces a reset of the transmit FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Transmit FIFO normal operation.   1 - Reset transmit FIFO pointer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Reset": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO reset
When written to 1, this bit forces a reset of the receive FIFO to the empty condition. One AXI clock cycle after reset, this bit is again set to 0.
When set to:   0 - Receive FIFO normal operation.   1 - Reset receive FIFO pointer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Manual_Slave_Select_Assertion_Enable": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Manual slave select assertion enable
This bit forces the data in the slave select register to be asserted on the slave select output anytime the device is configured as a master and the device is enabled (SPE asserted).
This bit has no effect on slave operation.
When set to:   0 - Slave select output asserted by master core logic.   1 - Slave select output follows data in slave select register. The manual slave assertion mode is supported in standard SPI mode only.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Master_Transaction_Inhibit": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Master transaction inhibit
This bit inhibits master transactions.
This bit has no effect on slave operation.
When set to:   0 - Master transactions enabled.   1 - Master transactions disabled. This bit immediately inhibits the transaction. Setting this bit while transfer is in progress would result in unpredictable outcome
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LSB_First": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "LSB first
This bit selects LSB first data transfer format.
The default transfer format is MSB first.
When set to:
  0 - MSB first transfer format.
  1 - LSB first transfer format.
In Dual/Quad SPI mode, only the MSB first mode of the core is allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551264,
},
"SPISR": {"description": "SPI Status Register",
"address_offset": "0x64",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Empty": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Empty.
When a receive FIFO exists, this bit is set High when the receive FIFO is empty. The occupancy of the FIFO is decremented with each FIFO read operation.
Note: When FIFOs do not exist, this bit is set High when the receive register has been read (this option is available only in standard SPI mode). This bit is cleared at the end of a successful SPI transfer. For dual/quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Receive full.
When a receive FIFO exists, this bit is set High when the receive FIFO is full. The occupancy of the FIFO is incremented with the completion of each SPI transaction.
Note: When FIFOs do not exist, this bit is set High when an SPI transfer has completed (this option is available only in standard SPI mode). Rx_Empty and Rx_Full are complements in this case
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit empty.
When a transmit FIFO exists, this bit is set to High when the transmit FIFO is empty. This bit goes High as soon as the TX FIFO becomes empty. While this bit is High, the last byte of the data that is to be transmitted would still be in the pipeline.
The occupancy of the FIFO is decremented with the completion of each SPI transfer.
Note: When FIFOs do not exist, this bit is set with the completion of an SPI transfer (this option is available only in standard SPI mode). Either with or without FIFOs, this bit is cleared on an AXI write to the FIFO or transmit register. For Dual/Quad SPI mode, the FIFO is always present in the core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit full.
When a transmit FIFO exists, this bit is set High when the transmit FIFO is full.
Note: When FIFOs do not exist, this bit is set High when an AXI write to the transmit register has been made (this option is available only in standard SPI mode). This bit is cleared when the SPI transfer is completed
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MODF": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
This flag is set if the SS signal goes active while the SPI device is configured as a master. MODF is automatically cleared by reading the SPISR. 
A Low-to-High MODF transition generates a single-cycle strobe interrupt.   0 - No error.   1 - Error condition detected
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Select": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Mode_Select flag.
This flag is asserted when the core is configured in slave mode. Slave_Mode_Select is activated as soon as the master SPI core asserts the chip select pin for the core.
1 - Default in standard mode.
0 - Asserted when core configured in slave mode and selected by external SPI master.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA_Error flag.
When set to:   0 - Default.   1 - The CPOL and CPHA are set to 01 or 10. When the SPI memory is chosen as either Winbond, Micron or Spansion, and CPOL and CPHA are configured as 01 or 10, this bit is set.
These memories support CPOL=CPHA mode in 00 or in 11 mode. CPOL_CPHA_Error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_mode_error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode error flag.
When set to:   1 - This bit is set when the core is configured with dual or quad SPI mode and the master is set to 0 in the control register (SPICR).   0 - Master mode is set in the control register (SPICR). Note: Quad SPI mode, only the master mode of the core is allowed. Slave mode error flag is only applicable when the core is configured either in dual or qu ad mode in legacy or enhanced AXI4 mode interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error flag.
When set to:   0 - Default.   1 - This bit is set when the core is configured to transfer the SPI transactions in either dual or quad SPI mode and LSB first bit is set in the control register (SPICR). Note: In dual/quad SPI mode, only the MSB first mode of the core is allowed. MSB error flag is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error flag.
When set to:   0 - Default. The loopback bit in the control register is at default state.   1 - When the SPI command, address, and data bits are set to be transferred in other than standard SPI protocol mode and this bit is set in control register (SPICR). Note: Loopback is only allowed when the core is configured in standard mode. Other modes setting of the bit causes an error and the interrupt bit is set in legacy or enhanced mode AXI4 interface
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Command error flag.
When set to:   0 - Default.   1 - When the core is configured in dual/quad SPI mode and the first entry in the SPI DTR FIFO (after reset) do not match with the supported command list for the particular memory, this bit is set. Note: Command error is only applicable when the core is configured either in dual or quad mode in legacy or enhanced mode AXI4 interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551268,
},
"SPI_SSR": {"description": "SPI Slave Select Register",
"address_offset": "0x70",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Selected_Slave": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Active-Low, one-hot encoded slave select
The slaves are numbered right to left starting at zero with the LSB. The slave numbers correspond to the indexes of signal SS
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551280,
},
"SPI_TXFIFO_OR": {"description": "SPI Transmit FIFO Occupancy Register",
"address_offset": "0x74",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy.
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551284,
},
"SPI_RXFIFO_OR": {"description": "SPI Receive FIFO Occupancy Register",
"address_offset": "0x78",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "The binary value plus 1 yields the occupancy. 
Bit width is log(FIFO Depth). 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551288,
},
"DGIER": {"description": "Device Global Interrupt Enable Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable.
Allows passing all individually enabled interrupts to the interrupt controller.
When set to:   0 - Disabled.   1 - Enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551196,
},
"SPI_DTR": {"description": "SPI Data Transmit Register",
"address_offset": "0x68",
"access": "write-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"TX_Data": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Transmit Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551272,
},
"SPI_DRR": {"description": "SPI Data Receive Register",
"address_offset": "0x6C",
"access": "read-only",
"size": "32",
"interface": "AXI_LITE",
"fields": {"RX_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "SPI Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551276,
},
"IPISR": {"description": "IP Interrupt Status Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a master. This bit is set immediately on SS going active.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error.
This interrupt is generated if the SS signal goes active while the SPI device is configured as a slave, but is not enabled.
This bit is set immediately on SS going active and continually set if SS is active and the device is not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
It is set when the last byte of data has been transferred out to the external flash memory.
In the context of the M68HC11 reference manual, when configured without FIFOs, this interrupt is equivalent in information content to the complement of the SPI transfer complete flag (SPIF ) interrupt bit.
In master mode if this bit is set to 1, no more SPI transfers are permitted
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO underrun.
This bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register when data is requested from an empty transmit register/FIFO by the SPI core logic to perform a SPI transfer.
This can occur only when the SPI device is configured as a slave in standard SPI configuration and is enabled by the SPE bit as set. All zeros are loaded in the shift register and transmitted by the slave in an under-run condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
Without FIFOs, this bit is set at the end of a SPI element transfer by a one-clock period strobe to the interrupt register (An element can be a byte, half-word, or word depending on the value of Transfer Width).
With FIFOs, this bit is set at the end of the SPI element transfer, when the receive FIFO has been completely filled by a one-clock period strobe to the interrupt register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO overrun.
This bit is set by a one-clock period strobe to the interrupt register when an attempt to write data to a full receive register or FIFO is made by the SPI core logic to complete a SPI transfer.
This can occur when the SPI device is in either master or slave mode (in standard SPI mode) or if the IP is configured in SPI master mode (dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXFIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.
In standard SPI configuration, IPISR Bit[6] is the transmit FIFO half-empty interrupt. 
In dual or quad SPI configuration, based on the FIFO depth, this bit is set at half-empty condition.
Note: This interrupt exists only if the AXI Quad SPI core is configured with FIFOs (In standard, dual or quad SPI mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave select mode.
The assertion of this bit is applicable only when the core is configured in slave mode in standard SPI configuration. 
This bit is set when the other SPI master core selects the core by asserting the slave select line. This bit is set by a one-clock period strobe to the interrupt register.
Note: This bit is applicable only in standard SPI slave mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR not empty.
The assertion of this bit is applicable only in the case where FIFO Depth is 16 or 256 and the core is configured in slave mode and standard SPI mode. This bit is set when the DRR FIFO receives the first data value during the SPI transaction.
This bit is set by a one-clock period strobe to the interrupt register when the core receives the first data beat.
Note: The assertion of this bit is applicable only when the FIFO Depth parameter is 16 or 256 and the core is configured in slave mode in standard SPI mode. When FIFO Depth is set to 0, this bit always returns 0. This bit has no significance in dual/quad mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The CPOL - CPHA control register bits are set to 01 or 10.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The core is configured in master = 0 in control register (SPICR(2)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB error.
This flag is asserted when:
  The core is configured in either dual or quad SPI mode and
  The LSB First bit in the control register (SPICR) is set to 1.
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback error.
This flag is asserted when:
  The core is configured in dual or quad SPI transfer mode and
  The LOOP bit is set in control register (SPICR(0)).
In standard SPI mode, this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command error.
This flag is asserted when:   The core is configured in dual/quad SPI mode and   The first entry in the SPI DTR FIFO (after reset) does not match with the supported command list for particular memory. When the SPI command in DTR FIFO does not match with the internal supported command list, the core completes the SPI transactions in standard SPI format. This bit is set to show this behavior of the core.
In standard SPI mode this bit is always in default state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551200,
},
"IPIER": {"description": "IP Interrupt Enable Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "AXI_LITE",
"fields": {"MODF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_MODF": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Slave mode-fault error flag.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Empty": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit register/FIFO empty.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DTR_Underrun": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Data transmit FIFO underrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Full": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Data receive register/FIFO full.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Overrun": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO overrun.
  0 - Disabled.
  1 - Enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Half_Empty": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO half empty.   0 - Disabled.   1 - Enabled. Note: This bit is meaningful only if the AXI Quad SPI core is configured with FIFOs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Select_Mode": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Slave_Select_Mode.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in slave mode by selecting the active-Low status on spisel.
In master mode, setting this bit has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DRR_Not_Empty": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "DRR_Not_Empty.   0 - Disabled.   1 - Enabled. Note: The setting of this bit is applicable only when FIFO Depth is set to 1 and the core is configured in slave mode of standard SPI mode.
If FIFO Depth is set to 0, the setting of this bit has no effect. This is allowed only in standard SPI configuration. It means this bit is not set in the IPIER register. Therefore, this bit should only be used when FIFO Depth is set to 1 and when the core is configured in slave mode.
This bit has no significance in dual or quad mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPOL_CPHA_Error": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "CPOL_CPHA error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Slave_Mode_Error": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "I/O mode instruction error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSB_Error": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "MSB_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loopback_Error": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Loopback Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Command_Error": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Command_Error.   0 - Disabled.   1 - Enabled. This bit is applicable only when the core is configured in dual or quad SPI mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684551208,
},
},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_bbram_0": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_efuse": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_3": {},
"psu_ipi_4": {},
"psu_ipi_5": {},
"psu_ipi_6": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pmu_global_0": {},
"psu_pmu_iomodule": {},
"psu_pmu_ram": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sd_0": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_uart_0": {},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.491
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.517
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_pmu_0], Result: [null, {"axi_dma_0_S_AXI_LITE": {"name": "axi_dma_0",
"base": "0xA0000000",
"high": "0xA000FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_ADC_AXI_LITE": {"name": "axi_quad_spi_ADC",
"base": "0xA0010000",
"high": "0xA001FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_1_S_AXI_LITE": {"name": "axi_dma_1",
"base": "0xA0020000",
"high": "0xA002FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_DVGA_AXI_LITE": {"name": "axi_quad_spi_DVGA",
"base": "0xA0030000",
"high": "0xA003FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"psu_adma_0": {"name": "psu_adma_0",
"base": "0xFFA80000",
"high": "0xFFA8FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_1": {"name": "psu_adma_1",
"base": "0xFFA90000",
"high": "0xFFA9FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_2": {"name": "psu_adma_2",
"base": "0xFFAA0000",
"high": "0xFFAAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_3": {"name": "psu_adma_3",
"base": "0xFFAB0000",
"high": "0xFFABFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_4": {"name": "psu_adma_4",
"base": "0xFFAC0000",
"high": "0xFFACFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_5": {"name": "psu_adma_5",
"base": "0xFFAD0000",
"high": "0xFFADFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_6": {"name": "psu_adma_6",
"base": "0xFFAE0000",
"high": "0xFFAEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_adma_7": {"name": "psu_adma_7",
"base": "0xFFAF0000",
"high": "0xFFAFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_0": {"name": "psu_afi_0",
"base": "0xFD360000",
"high": "0xFD36FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_1": {"name": "psu_afi_1",
"base": "0xFD370000",
"high": "0xFD37FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_2": {"name": "psu_afi_2",
"base": "0xFD380000",
"high": "0xFD38FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_3": {"name": "psu_afi_3",
"base": "0xFD390000",
"high": "0xFD39FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_4": {"name": "psu_afi_4",
"base": "0xFD3A0000",
"high": "0xFD3AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_5": {"name": "psu_afi_5",
"base": "0xFD3B0000",
"high": "0xFD3BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_afi_6": {"name": "psu_afi_6",
"base": "0xFF9B0000",
"high": "0xFF9BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ams": {"name": "psu_ams",
"base": "0xFFA50000",
"high": "0xFFA5FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_0": {"name": "psu_apm_0",
"base": "0xFD0B0000",
"high": "0xFD0BFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_1": {"name": "psu_apm_1",
"base": "0xFFA00000",
"high": "0xFFA0FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_2": {"name": "psu_apm_2",
"base": "0xFFA10000",
"high": "0xFFA1FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apm_5": {"name": "psu_apm_5",
"base": "0xFD490000",
"high": "0xFD49FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_apu": {"name": "psu_apu",
"base": "0xFD5C0000",
"high": "0xFD5CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_gpv": {"name": "psu_cci_gpv",
"base": "0xFD6E0000",
"high": "0xFD6EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_cci_reg": {"name": "psu_cci_reg",
"base": "0xFD5E0000",
"high": "0xFD5EFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crf_apb": {"name": "psu_crf_apb",
"base": "0xFD1A0000",
"high": "0xFD2DFFFF",
"size": "1310720",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_crl_apb": {"name": "psu_crl_apb",
"base": "0xFF5E0000",
"high": "0xFF85FFFF",
"size": "2621440",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csu_0": {"name": "psu_csu_0",
"base": "0xFFCA0000",
"high": "0xFFCAFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_csudma": {"name": "psu_csudma",
"base": "0xFFC80000",
"high": "0xFFC9FFFF",
"size": "131072",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ctrl_ipi": {"name": "psu_ctrl_ipi",
"base": "0xFF380000",
"high": "0xFF3FFFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_phy": {"name": "psu_ddr_phy",
"base": "0xFD080000",
"high": "0xFD08FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_qos_ctrl": {"name": "psu_ddr_qos_ctrl",
"base": "0xFD090000",
"high": "0xFD09FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu0_cfg": {"name": "psu_ddr_xmpu0_cfg",
"base": "0xFD000000",
"high": "0xFD00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu1_cfg": {"name": "psu_ddr_xmpu1_cfg",
"base": "0xFD010000",
"high": "0xFD01FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu2_cfg": {"name": "psu_ddr_xmpu2_cfg",
"base": "0xFD020000",
"high": "0xFD02FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu3_cfg": {"name": "psu_ddr_xmpu3_cfg",
"base": "0xFD030000",
"high": "0xFD03FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu4_cfg": {"name": "psu_ddr_xmpu4_cfg",
"base": "0xFD040000",
"high": "0xFD04FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_xmpu5_cfg": {"name": "psu_ddr_xmpu5_cfg",
"base": "0xFD050000",
"high": "0xFD05FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddrc_0": {"name": "psu_ddrc_0",
"base": "0xFD070000",
"high": "0xFD070FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_efuse": {"name": "psu_efuse",
"base": "0xFFCC0000",
"high": "0xFFCCFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_gpv": {"name": "psu_fpd_gpv",
"base": "0xFD700000",
"high": "0xFD7FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr": {"name": "psu_fpd_slcr",
"base": "0xFD610000",
"high": "0xFD68FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_slcr_secure": {"name": "psu_fpd_slcr_secure",
"base": "0xFD690000",
"high": "0xFD6CFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_cfg": {"name": "psu_fpd_xmpu_cfg",
"base": "0xFD5D0000",
"high": "0xFD5DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_fpd_xmpu_sink": {"name": "psu_fpd_xmpu_sink",
"base": "0xFD4F0000",
"high": "0xFD4FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_0": {"name": "psu_gdma_0",
"base": "0xFD500000",
"high": "0xFD50FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_1": {"name": "psu_gdma_1",
"base": "0xFD510000",
"high": "0xFD51FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_2": {"name": "psu_gdma_2",
"base": "0xFD520000",
"high": "0xFD52FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_3": {"name": "psu_gdma_3",
"base": "0xFD530000",
"high": "0xFD53FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_4": {"name": "psu_gdma_4",
"base": "0xFD540000",
"high": "0xFD54FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_5": {"name": "psu_gdma_5",
"base": "0xFD550000",
"high": "0xFD55FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_6": {"name": "psu_gdma_6",
"base": "0xFD560000",
"high": "0xFD56FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gdma_7": {"name": "psu_gdma_7",
"base": "0xFD570000",
"high": "0xFD57FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_gpio_0": {"name": "psu_gpio_0",
"base": "0xFF0A0000",
"high": "0xFF0AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntr": {"name": "psu_iou_scntr",
"base": "0xFF250000",
"high": "0xFF25FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iou_scntrs": {"name": "psu_iou_scntrs",
"base": "0xFF260000",
"high": "0xFF26FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iousecure_slcr": {"name": "psu_iousecure_slcr",
"base": "0xFF240000",
"high": "0xFF24FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_iouslcr_0": {"name": "psu_iouslcr_0",
"base": "0xFF180000",
"high": "0xFF23FFFF",
"size": "786432",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ipi_3": {"name": "psu_ipi_3",
"base": "0xFF330000",
"high": "0xFF330FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_ipi_4": {"name": "psu_ipi_4",
"base": "0xFF331000",
"high": "0xFF331FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_ipi_5": {"name": "psu_ipi_5",
"base": "0xFF332000",
"high": "0xFF332FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_ipi_6": {"name": "psu_ipi_6",
"base": "0xFF333000",
"high": "0xFF333FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "",
},
"psu_lpd_slcr": {"name": "psu_lpd_slcr",
"base": "0xFF410000",
"high": "0xFF4AFFFF",
"size": "655360",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_slcr_secure": {"name": "psu_lpd_slcr_secure",
"base": "0xFF4B0000",
"high": "0xFF4DFFFF",
"size": "196608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu": {"name": "psu_lpd_xppu",
"base": "0xFF980000",
"high": "0xFF98FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_lpd_xppu_sink": {"name": "psu_lpd_xppu_sink",
"base": "0xFF9C0000",
"high": "0xFF9CFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_mbistjtag": {"name": "psu_mbistjtag",
"base": "0xFFCF0000",
"high": "0xFFCFFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_message_buffers": {"name": "psu_message_buffers",
"base": "0xFF990000",
"high": "0xFF99FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm": {"name": "psu_ocm",
"base": "0xFF960000",
"high": "0xFF96FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_xmpu_cfg": {"name": "psu_ocm_xmpu_cfg",
"base": "0xFFA70000",
"high": "0xFFA7FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_global_0": {"name": "psu_pmu_global_0",
"base": "0xFFD80000",
"high": "0xFFDBFFFF",
"size": "262144",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_iomodule": {"name": "psu_pmu_iomodule",
"base": "0xFFD40000",
"high": "0xFFD5FFFF",
"size": "131072",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rpu": {"name": "psu_rpu",
"base": "0xFF9A0000",
"high": "0xFF9AFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rsa": {"name": "psu_rsa",
"base": "0xFFCE0000",
"high": "0xFFCEFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_rtc": {"name": "psu_rtc",
"base": "0xFFA60000",
"high": "0xFFA6FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_sd_0": {"name": "psu_sd_0",
"base": "0xFF160000",
"high": "0xFF16FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_serdes": {"name": "psu_serdes",
"base": "0xFD400000",
"high": "0xFD47FFFF",
"size": "524288",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_siou": {"name": "psu_siou",
"base": "0xFD3D0000",
"high": "0xFD3DFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_gpv": {"name": "psu_smmu_gpv",
"base": "0xFD800000",
"high": "0xFDFFFFFF",
"size": "8388608",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_smmu_reg": {"name": "psu_smmu_reg",
"base": "0xFD5F0000",
"high": "0xFD5FFFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_uart_0": {"name": "psu_uart_0",
"base": "0xFF000000",
"high": "0xFF00FFFF",
"size": "65536",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_bbram_0_MEM_0": {"name": "psu_bbram_0",
"base": "0xFFCD0000",
"high": "0xFFCDFFFF",
"size": "65536",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_0_MEM_0": {"name": "psu_ddr_0",
"base": "0xFF00000",
"high": "0xFFFFFFF",
"size": "1048576",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ddr_0_MEM_1": {"name": "psu_ddr_0",
"base": "0x0",
"high": "0xFEFFFFF",
"size": "267386880",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_1",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_ocm_ram_0_MEM_0": {"name": "psu_ocm_ram_0",
"base": "0xFFFC0000",
"high": "0xFFFFFFFF",
"size": "262144",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
"psu_pmu_ram_MEM_0": {"name": "psu_pmu_ram",
"base": "0xFFDC0000",
"high": "0xFFDDFFFF",
"size": "131072",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "MEM_0",
"acctype": "Read/Write",
"tz": "NonSecure",
},
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.533
!MESSAGE XSCT Command: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.548
!MESSAGE XSCT command with result: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"psu_apm_5": "SLOT_0_AXI",
"psu_apm_0": "SLOT_0_AXI SLOT_1_AXI SLOT_2_AXI SLOT_3_AXI SLOT_4_AXI SLOT_5_AXI",
"psu_apm_2": "SLOT_0_AXI",
"psu_apm_1": "SLOT_0_AXI",
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.548
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_S_AXI_BASEADDR], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.565
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_S_AXI_BASEADDR], Result: [null, 0xFD0B0000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.565
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_ENABLE_PROFILE], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.565
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_ENABLE_PROFILE], Result: [null, 0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.565
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_ENABLE_ADVANCED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.580
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_ENABLE_ADVANCED], Result: [null, 1]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.580
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_NUM_OF_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.601
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_0 C_NUM_OF_COUNTERS], Result: [null, 10]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.601
!MESSAGE XSCT Command: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.612
!MESSAGE XSCT command with result: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"psu_apm_5": "SLOT_0_AXI",
"psu_apm_0": "SLOT_0_AXI SLOT_1_AXI SLOT_2_AXI SLOT_3_AXI SLOT_4_AXI SLOT_5_AXI",
"psu_apm_2": "SLOT_0_AXI",
"psu_apm_1": "SLOT_0_AXI",
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.612
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_S_AXI_BASEADDR], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.628
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_S_AXI_BASEADDR], Result: [null, 0xFFA00000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.634
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_ENABLE_PROFILE], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.634
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_ENABLE_PROFILE], Result: [null, 0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.644
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_ENABLE_ADVANCED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.644
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_ENABLE_ADVANCED], Result: [null, 1]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.644
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_NUM_OF_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.661
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_1 C_NUM_OF_COUNTERS], Result: [null, 3]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.661
!MESSAGE XSCT Command: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.661
!MESSAGE XSCT command with result: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"psu_apm_5": "SLOT_0_AXI",
"psu_apm_0": "SLOT_0_AXI SLOT_1_AXI SLOT_2_AXI SLOT_3_AXI SLOT_4_AXI SLOT_5_AXI",
"psu_apm_2": "SLOT_0_AXI",
"psu_apm_1": "SLOT_0_AXI",
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.676
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_S_AXI_BASEADDR], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.676
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_S_AXI_BASEADDR], Result: [null, 0xFFA10000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.691
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_ENABLE_PROFILE], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.691
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_ENABLE_PROFILE], Result: [null, 0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.691
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_ENABLE_ADVANCED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.710
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_ENABLE_ADVANCED], Result: [null, 1]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.710
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_NUM_OF_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.710
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_2 C_NUM_OF_COUNTERS], Result: [null, 3]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.723
!MESSAGE XSCT Command: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.723
!MESSAGE XSCT command with result: [::hsi::utils::get_apm_connection_info -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa], Result: [null, {"psu_apm_5": "SLOT_0_AXI",
"psu_apm_0": "SLOT_0_AXI SLOT_1_AXI SLOT_2_AXI SLOT_3_AXI SLOT_4_AXI SLOT_5_AXI",
"psu_apm_2": "SLOT_0_AXI",
"psu_apm_1": "SLOT_0_AXI",
}]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.739
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_S_AXI_BASEADDR], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.739
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_S_AXI_BASEADDR], Result: [null, 0xFD490000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.755
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_ENABLE_PROFILE], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.761
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_ENABLE_PROFILE], Result: [null, 0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.771
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_ENABLE_ADVANCED], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.771
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_ENABLE_ADVANCED], Result: [null, 1]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.787
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_NUM_OF_COUNTERS], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.787
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa psu_apm_5 C_NUM_OF_COUNTERS], Result: [null, 3]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.787
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa zynq_ultra_ps_e_0 PSU__CRF_APB__DBG_TSTMP_CTRL__ACT_FREQMHZ], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.802
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa zynq_ultra_ps_e_0 PSU__CRF_APB__DBG_TSTMP_CTRL__ACT_FREQMHZ], Result: [null, 250.000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:30.802
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:22:33.311
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:22:33.311
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:33.366
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#3]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:33.375
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:36.475
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.501
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.627
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.643
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.660
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.660
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.676
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.696
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.708
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.723
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.741
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.977
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.992
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:39.992
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.023
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.039
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.055
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.055
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.086
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.102
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.123
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.123
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.165
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.165
!MESSAGE XSCT Command: [version -server], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.180
!MESSAGE XSCT command with result: [version -server], Result: [null, 2022.2]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.180
!MESSAGE XSCT Command: [version], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.180
!MESSAGE XSCT command with result: [version], Result: [null, xsct 2022.2.0
SW Build 0 on 2022-10-13-12:09:39
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.196
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.213
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1  Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.213
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.244
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.258
!MESSAGE XSCT Command: [jtag targets -set -filter {name =~ "Digilent JTAG-HS3 210299ABB7ED" && level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.291
!MESSAGE XSCT command with result: [jtag targets -set -filter {name =~ "Digilent JTAG-HS3 210299ABB7ED" && level == 0}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.291
!MESSAGE XSCT Command: [jtag frequency], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.309
!MESSAGE XSCT command with result: [jtag frequency], Result: [null, 15000000]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.309
!MESSAGE XSCT Command: [source E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/scripts/vitis/util/zynqmp_utils.tcl], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.373
!MESSAGE XSCT command with result: [source E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/scripts/vitis/util/zynqmp_utils.tcl], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:40.374
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:41.781
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:41.781
!MESSAGE XSCT Command: [rst -system], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:42.118
!MESSAGE XSCT command with result: [rst -system], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:42.128
!MESSAGE XSCT Command: [after 3000], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.147
!MESSAGE XSCT command with result: [after 3000], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.193
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.209
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.224
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.256
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.256
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.273
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#3]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.273
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.293
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.304
!MESSAGE XSCT Command: [proc fetch_device_jtag_ctx { node_id } {
foreach t [jtag ta -ta] {
if {[dict get $t node_id] == $node_id} {
return [dict get $t target_ctx]
}
}
error cannot find a jtag device with node id $node_id}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.304
!MESSAGE XSCT command with result: [proc fetch_device_jtag_ctx { node_id } {
foreach t [jtag ta -ta] {
if {[dict get $t node_id] == $node_id} {
return [dict get $t target_ctx]
}
}
error cannot find a jtag device with node id $node_id}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.304
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.320
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.335
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.367
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.367
!MESSAGE XSCT Command: [fetch_device_jtag_ctx 2], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.382
!MESSAGE XSCT command with result: [fetch_device_jtag_ctx 2], Result: [null, jsn-JTAG-HS3-210299ABB7ED-04720093-0]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.382
!MESSAGE XSCT Command: [fetch_device_jtag_ctx 3], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.401
!MESSAGE XSCT command with result: [fetch_device_jtag_ctx 3], Result: [null, jsn-JTAG-HS3-210299ABB7ED-5ba00477-0]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.402
!MESSAGE XSCT Command: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==0 && jtag_device_ctx=="jsn-JTAG-HS3-210299ABB7ED-04720093-0"}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.477
!MESSAGE XSCT command with result: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==0 && jtag_device_ctx=="jsn-JTAG-HS3-210299ABB7ED-04720093-0"}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:45.477
!MESSAGE XSCT Command: [fpga -file C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/bitstream/DMA_testing.bit], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:50.171
!MESSAGE XSCT command with result: [fpga -file C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/bitstream/DMA_testing.bit], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:50.217
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:50.256
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:50.256
!MESSAGE XSCT Command: [loadhw -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -mem-ranges [list {0x80000000 0xbfffffff} {0x400000000 0x5ffffffff} {0x1000000000 0x7fffffffff}] -regs], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.076
!MESSAGE XSCT command with result: [loadhw -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -mem-ranges [list {0x80000000 0xbfffffff} {0x400000000 0x5ffffffff} {0x1000000000 0x7fffffffff}] -regs], Result: [null, ADC_AD9258_wrapper_1]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.076
!MESSAGE XSCT Command: [configparams force-mem-access 1], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.088
!MESSAGE XSCT command with result: [configparams force-mem-access 1], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.095
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.103
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.118
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.151
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.157
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.192
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.198
!MESSAGE XSCT Command: [set mode [expr [mrd -value 0xFF5E0200] & 0xf]], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.214
!MESSAGE XSCT command with result: [set mode [expr [mrd -value 0xFF5E0200] & 0xf]], Result: [null, 0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.214
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.233
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.245
!MESSAGE XSCT Command: [rst -processor], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.420
!MESSAGE XSCT command with result: [rst -processor], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:51.435
!MESSAGE XSCT Command: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/boot/fsbl.elf], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.304
!MESSAGE XSCT command with result: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/boot/fsbl.elf], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.304
!MESSAGE XSCT Command: [set bp_22_52_fsbl_bp [bpadd -addr &XFsbl_Exit]], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.572
!MESSAGE XSCT command with result: [set bp_22_52_fsbl_bp [bpadd -addr &XFsbl_Exit]], Result: [null, 0]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.586
!MESSAGE XSCT Command: [con -block -timeout 60], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.760
!MESSAGE XSCT command with result: [con -block -timeout 60], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.765
!MESSAGE XSCT Command: [bpremove $bp_22_52_fsbl_bp], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.807
!MESSAGE XSCT command with result: [bpremove $bp_22_52_fsbl_bp], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.807
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.839
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.854
!MESSAGE XSCT Command: [rst -processor], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.965
!MESSAGE XSCT command with result: [rst -processor], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:52.965
!MESSAGE XSCT Command: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/Debug/Interrupt_DMA_PSPL.elf], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.361
!MESSAGE XSCT command with result: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/Debug/Interrupt_DMA_PSPL.elf], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.361
!MESSAGE XSCT Command: [configparams force-mem-access 0], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.376
!MESSAGE XSCT command with result: [configparams force-mem-access 0], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.521
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.567
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.582
!MESSAGE XSCT Command: [con], Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:22:53.632
!MESSAGE XSCT command with result: [con], Result: [null, ]. Thread: Worker-8: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:22:53.633
!MESSAGE Tool usage for 'TCF_APP_DEBUG' updated to '1'

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:22:53.648
!MESSAGE Tool usage for 'TCF_SYSTEM_DEBUG' updated to '1'

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:25:02.485
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:25:02.488
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:28:17.715
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:28:17.716
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:24.000
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:24.016
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:24.019
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:24.032
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:29:24.032
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:24.032
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:24.047
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 10:29:30.344
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:58.888
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-12: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:58.903
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-12: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:58.938
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-12: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:58.947
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-12: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:29:58.947
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:58.963
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-12: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:29:58.963
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-12: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:45.428
!MESSAGE XSCT Command: [disconnect tcfchan#3], Thread: Thread-239

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:45.444
!MESSAGE XSCT command with result: [disconnect tcfchan#3], Result: [null, ]. Thread: Thread-239

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:45.491
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:45.506
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#4]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:45.506
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:48.553
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:51.554
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:54.572
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:54.572
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.379
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.386
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.400
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.416
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.419
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.431
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.450
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.795
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.820
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.827
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.858
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.858
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.882
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.890
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.937
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.937
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.953
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:56.968
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.001
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.001
!MESSAGE XSCT Command: [version -server], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.020
!MESSAGE XSCT command with result: [version -server], Result: [null, 2022.2]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.020
!MESSAGE XSCT Command: [version], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.032
!MESSAGE XSCT command with result: [version], Result: [null, xsct 2022.2.0
SW Build 0 on 2022-10-13-12:09:39
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.032
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.049
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.064
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.079
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.100
!MESSAGE XSCT Command: [jtag targets -set -filter {name =~ "Digilent JTAG-HS3 210299ABB7ED" && level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.127
!MESSAGE XSCT command with result: [jtag targets -set -filter {name =~ "Digilent JTAG-HS3 210299ABB7ED" && level == 0}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.134
!MESSAGE XSCT Command: [jtag frequency], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.147
!MESSAGE XSCT command with result: [jtag frequency], Result: [null, 15000000]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.147
!MESSAGE XSCT Command: [source E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/scripts/vitis/util/zynqmp_utils.tcl], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.158
!MESSAGE XSCT command with result: [source E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/scripts/vitis/util/zynqmp_utils.tcl], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.158
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.190
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.210
!MESSAGE XSCT Command: [rst -system], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.775
!MESSAGE XSCT command with result: [rst -system], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:30:57.790
!MESSAGE XSCT Command: [after 3000], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.806
!MESSAGE XSCT command with result: [after 3000], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.841
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.854
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.854
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.901
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.901
!MESSAGE XSCT Command: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==0 && jtag_device_ctx=="jsn-JTAG-HS3-210299ABB7ED-04720093-0"}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.951
!MESSAGE XSCT command with result: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==0 && jtag_device_ctx=="jsn-JTAG-HS3-210299ABB7ED-04720093-0"}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:00.951
!MESSAGE XSCT Command: [fpga -file C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/bitstream/DMA_testing.bit], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.692
!MESSAGE XSCT command with result: [fpga -file C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/bitstream/DMA_testing.bit], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.751
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.767
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.783
!MESSAGE XSCT Command: [loadhw -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -mem-ranges [list {0x80000000 0xbfffffff} {0x400000000 0x5ffffffff} {0x1000000000 0x7fffffffff}] -regs], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.862
!MESSAGE XSCT command with result: [loadhw -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -mem-ranges [list {0x80000000 0xbfffffff} {0x400000000 0x5ffffffff} {0x1000000000 0x7fffffffff}] -regs], Result: [null, ADC_AD9258_wrapper_1]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.862
!MESSAGE XSCT Command: [configparams force-mem-access 1], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.878
!MESSAGE XSCT command with result: [configparams force-mem-access 1], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.878
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.894
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.912
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.936
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     5  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.941
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.957
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.957
!MESSAGE XSCT Command: [set mode [expr [mrd -value 0xFF5E0200] & 0xf]], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.973
!MESSAGE XSCT command with result: [set mode [expr [mrd -value 0xFF5E0200] & 0xf]], Result: [null, 0]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:05.988
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:06.008
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:06.008
!MESSAGE XSCT Command: [rst -processor], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:06.170
!MESSAGE XSCT command with result: [rst -processor], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:06.170
!MESSAGE XSCT Command: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/boot/fsbl.elf], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.026
!MESSAGE XSCT command with result: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/boot/fsbl.elf], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.037
!MESSAGE XSCT Command: [set bp_31_7_fsbl_bp [bpadd -addr &XFsbl_Exit]], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.070
!MESSAGE XSCT command with result: [set bp_31_7_fsbl_bp [bpadd -addr &XFsbl_Exit]], Result: [null, 1]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.086
!MESSAGE XSCT Command: [con -block -timeout 60], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.228
!MESSAGE XSCT command with result: [con -block -timeout 60], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.238
!MESSAGE XSCT Command: [bpremove $bp_31_7_fsbl_bp], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.248
!MESSAGE XSCT command with result: [bpremove $bp_31_7_fsbl_bp], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.264
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.281
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.296
!MESSAGE XSCT Command: [rst -processor], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.359
!MESSAGE XSCT command with result: [rst -processor], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.359
!MESSAGE XSCT Command: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/Debug/Interrupt_DMA_PSPL.elf], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.959
!MESSAGE XSCT command with result: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/Debug/Interrupt_DMA_PSPL.elf], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.975
!MESSAGE XSCT Command: [configparams force-mem-access 0], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:07.991
!MESSAGE XSCT command with result: [configparams force-mem-access 0], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:08.085
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:08.117
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:08.122
!MESSAGE XSCT Command: [con], Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:31:08.165
!MESSAGE XSCT command with result: [con], Result: [null, ]. Thread: Worker-16: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:31:08.180
!MESSAGE Tool usage for 'TCF_APP_DEBUG' updated to '2'

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:31:08.180
!MESSAGE Tool usage for 'TCF_SYSTEM_DEBUG' updated to '2'

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:38:50.750
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:38:50.771
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:38:50.776
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:38:50.784
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:38:50.792
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:38:50.801
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:38:50.813
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-14: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 10:38:58.460
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:39:59.576
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:39:59.589
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:39:59.592
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:39:59.602
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 10:39:59.609
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:39:59.618
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 10:39:59.618
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-8: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 10:40:11.902
!MESSAGE Build step failed, canceling full build chain.

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:53:22.797
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY org.eclipse.tcf 4 0 2024-09-05 10:53:22.826
!MESSAGE Invalid peerAdded event
!STACK 0
java.lang.Error
	at org.eclipse.tcf.internal.services.remote.LocatorProxy$1.event(LocatorProxy.java:64)
	at org.eclipse.tcf.core.AbstractChannel.handleInput(AbstractChannel.java:1191)
	at org.eclipse.tcf.core.AbstractChannel$1$1.run(AbstractChannel.java:371)
	at org.eclipse.tcf.EventQueue.run(EventQueue.java:98)
	at java.base/java.lang.Thread.run(Thread.java:829)

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:35:17.784
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:35:17.784
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:35:17.794
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:35:17.802
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:35:17.804
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:35:17.804
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:35:17.816
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:35:19.144
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:36:55.641
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:36:55.652
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:36:55.652
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:36:55.662
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:36:55.662
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:36:55.673
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:36:55.681
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:36:56.601
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:37:32.875
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-35: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:37:32.883
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-35: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:37:32.883
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-35: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:37:32.890
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-35: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:37:32.895
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:37:32.895
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-35: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:37:32.900
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-35: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:37:34.540
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:36.630
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-30: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:36.638
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-30: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:36.647
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-30: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:36.651
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-30: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:38:36.658
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:36.662
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-30: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:36.668
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-30: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:38:37.578
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:57.648
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-39: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:57.663
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-39: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:57.663
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-39: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:57.676
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-39: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:38:57.678
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:57.682
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-39: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:38:57.687
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-39: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:38:58.674
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:40:41.866
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:40:41.884
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:40:41.884
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:40:41.884
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:40:41.897
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:40:41.897
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:40:41.897
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:40:45.034
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:04.030
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-26: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:04.030
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-26: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:04.045
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-26: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:04.045
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-26: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:41:04.045
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:04.045
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-26: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:04.061
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-26: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:41:06.239
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:38.102
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:38.117
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:38.117
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:38.133
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:41:38.133
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:38.133
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:41:38.133
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-36: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:41:40.357
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:04.315
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:04.315
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:04.315
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:04.327
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:43:04.327
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:04.343
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:04.343
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:43:06.521
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:39.420
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:39.420
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:39.436
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:39.436
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:43:39.436
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:39.455
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:43:39.456
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-38: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:50.930
!MESSAGE XSCT Command: [disconnect tcfchan#4], Thread: Thread-1647

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:50.932
!MESSAGE XSCT command with result: [disconnect tcfchan#4], Result: [null, ]. Thread: Thread-1647

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.018
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.030
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#5]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.030
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.056
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.056
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.087
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.087
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.119
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.136
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.152
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.152
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.182
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.584
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.594
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.610
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.643
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.658
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.674
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.674
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.713
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.722
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.737
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.737
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.769
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.769
!MESSAGE XSCT Command: [version -server], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.793
!MESSAGE XSCT command with result: [version -server], Result: [null, 2022.2]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.793
!MESSAGE XSCT Command: [version], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.801
!MESSAGE XSCT command with result: [version], Result: [null, xsct 2022.2.0
SW Build 0 on 2022-10-13-12:09:39
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.816
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.816
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.831
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.863
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.863
!MESSAGE XSCT Command: [jtag targets -set -filter {name =~ "Digilent JTAG-HS3 210299ABB7ED" && level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.902
!MESSAGE XSCT command with result: [jtag targets -set -filter {name =~ "Digilent JTAG-HS3 210299ABB7ED" && level == 0}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.910
!MESSAGE XSCT Command: [jtag frequency], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.916
!MESSAGE XSCT command with result: [jtag frequency], Result: [null, 15000000]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.916
!MESSAGE XSCT Command: [source E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/scripts/vitis/util/zynqmp_utils.tcl], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.926
!MESSAGE XSCT command with result: [source E:/Softwares/Xilinx_2022_2_sys_Files/Vitis/2022.2/scripts/vitis/util/zynqmp_utils.tcl], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.926
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.957
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:51.957
!MESSAGE XSCT Command: [rst -system], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:52.515
!MESSAGE XSCT command with result: [rst -system], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:52.520
!MESSAGE XSCT Command: [after 3000], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.541
!MESSAGE XSCT command with result: [after 3000], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.620
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.672
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.672
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.698
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.714
!MESSAGE XSCT Command: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==0 && jtag_device_ctx=="jsn-JTAG-HS3-210299ABB7ED-04720093-0"}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.750
!MESSAGE XSCT command with result: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==0 && jtag_device_ctx=="jsn-JTAG-HS3-210299ABB7ED-04720093-0"}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:46:55.763
!MESSAGE XSCT Command: [fpga -file C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/bitstream/DMA_testing.bit], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.372
!MESSAGE XSCT command with result: [fpga -file C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/_ide/bitstream/DMA_testing.bit], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.436
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.468
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.468
!MESSAGE XSCT Command: [loadhw -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -mem-ranges [list {0x80000000 0xbfffffff} {0x400000000 0x5ffffffff} {0x1000000000 0x7fffffffff}] -regs], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.547
!MESSAGE XSCT command with result: [loadhw -hw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa -mem-ranges [list {0x80000000 0xbfffffff} {0x400000000 0x5ffffffff} {0x1000000000 0x7fffffffff}] -regs], Result: [null, ADC_AD9258_wrapper_1]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.547
!MESSAGE XSCT Command: [configparams force-mem-access 1], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.562
!MESSAGE XSCT command with result: [configparams force-mem-access 1], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.562
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.578
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.578
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.629
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED" && level==1}], Result: [null,      2  xczu5 (idcode 04720093 irlen 12 fpga)
     3  arm_dap (idcode 5ba00477 irlen 4)]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.629
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*"}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.657
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*"}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.672
!MESSAGE XSCT Command: [set mode [expr [mrd -value 0xFF5E0200] & 0xf]], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.672
!MESSAGE XSCT command with result: [set mode [expr [mrd -value 0xFF5E0200] & 0xf]], Result: [null, 0]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.688
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.705
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.705
!MESSAGE XSCT Command: [rst -processor], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.863
!MESSAGE XSCT command with result: [rst -processor], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:00.863
!MESSAGE XSCT Command: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/boot/fsbl.elf], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.744
!MESSAGE XSCT command with result: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/boot/fsbl.elf], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.744
!MESSAGE XSCT Command: [set bp_47_1_fsbl_bp [bpadd -addr &XFsbl_Exit]], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.792
!MESSAGE XSCT command with result: [set bp_47_1_fsbl_bp [bpadd -addr &XFsbl_Exit]], Result: [null, 2]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.792
!MESSAGE XSCT Command: [con -block -timeout 60], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.902
!MESSAGE XSCT command with result: [con -block -timeout 60], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.902
!MESSAGE XSCT Command: [bpremove $bp_47_1_fsbl_bp], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.923
!MESSAGE XSCT command with result: [bpremove $bp_47_1_fsbl_bp], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.935
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.949
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:01.949
!MESSAGE XSCT Command: [rst -processor], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.046
!MESSAGE XSCT command with result: [rst -processor], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.046
!MESSAGE XSCT Command: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/Debug/Interrupt_DMA_PSPL.elf], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.657
!MESSAGE XSCT command with result: [dow C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/Interrupt_DMA_PSPL/Debug/Interrupt_DMA_PSPL.elf], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.674
!MESSAGE XSCT Command: [configparams force-mem-access 0], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.689
!MESSAGE XSCT command with result: [configparams force-mem-access 0], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.800
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "*A53*#0"}], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.819
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "*A53*#0"}], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.832
!MESSAGE XSCT Command: [con], Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:47:02.879
!MESSAGE XSCT command with result: [con], Result: [null, ]. Thread: Worker-30: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:47:02.879
!MESSAGE Tool usage for 'TCF_APP_DEBUG' updated to '3'

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:47:02.895
!MESSAGE Tool usage for 'TCF_SYSTEM_DEBUG' updated to '3'

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:04.982
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-40: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:04.998
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-40: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:04.998
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-40: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:05.014
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-40: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:54:05.014
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:05.030
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-40: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:05.037
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-40: Build Project

!ENTRY com.xilinx.sdx.core 1 0 2024-09-05 12:54:06.660
!MESSAGE Build step failed, canceling full build chain.

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:16.685
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Thread: Worker-7: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:16.700
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss ], Result: [null, ]. Thread: Worker-7: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:16.704
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-7: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:16.720
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/hw/DMA_testing.xsa C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, {"procname": "psu_cortexa53_0",
"osname": "standalone",
"osver": "8.0",
}]. Thread: Worker-7: Build Project

!ENTRY com.xilinx.sdk.utils 1 0 2024-09-05 12:54:16.720
!MESSAGE Generating MD5 hash for file: C:\projects\2189\Adc_DVGA_config\lpbck_intr_wrkspce\DMA_testing\export\DMA_testing\sw\DMA_testing\standalone_psu_cortexa53_0\system.mss ...

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:16.732
!MESSAGE XSCT Command: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Thread: Worker-7: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:16.732
!MESSAGE XSCT command with result: [::hsi::utils::closesw C:/projects/2189/Adc_DVGA_config/lpbck_intr_wrkspce/DMA_testing/export/DMA_testing/sw/DMA_testing/standalone_psu_cortexa53_0/system.mss], Result: [null, ]. Thread: Worker-7: Build Project

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.737
!MESSAGE XSCT Command: [disconnect tcfchan#5], Thread: Thread-1740

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.770
!MESSAGE XSCT command with result: [disconnect tcfchan#5], Result: [null, ]. Thread: Thread-1740

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.821
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.834
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#6]. Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.834
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.865
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED (error DR shift through all zeroes)]. Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.865
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.880
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-HS3 210299ABB7ED (error DR shift through all zeroes)]. Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:24.886
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED (error DR shift through all zeroes)" && level==1}], Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:27.909
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED (error DR shift through all zeroes)" && level==1}], Result: [null, ]. Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:30.912
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED (error DR shift through all zeroes)" && level==1}], Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system

!ENTRY com.xilinx.sdk.utils 0 0 2024-09-05 12:54:33.963
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-HS3 210299ABB7ED (error DR shift through all zeroes)" && level==1}], Result: [null, ]. Thread: Worker-44: Launching SystemDebugger_Interrupt_DMA_PSPL_system
